[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.10.1","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://sergio.io\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false},\"legacy\":{\"collections\":false}}","content-config-digest","70481b06f12c7ea7","blog",["Map",11,12,94,95,180,181,298,299],"building-scalable-teams",{"id":11,"data":13,"body":24,"filePath":25,"digest":26,"rendered":27,"legacyId":93},{"title":14,"description":15,"pubDate":16,"tags":17,"draft":21,"author":22,"readingTime":23},"Building Scalable Engineering Teams","Lessons learned from scaling engineering teams from 5 to 50+ engineers while maintaining velocity and culture.",["Date","2024-01-15T00:00:00.000Z"],[18,19,20],"leadership","engineering-management","scaling",false,"Sergio Cruz","5 min read","# Building Scalable Engineering Teams\n\nScaling an engineering team is one of the most challenging aspects of growing a technology company. Over the past several years, I've had the privilege of leading teams through rapid growth phases, from small startup squads to large enterprise organizations. Here are the key lessons I've learned about building and scaling high-performing engineering teams.\n\n## The Foundation: Culture First\n\nBefore you hire your first engineer or implement any process, you need to establish a strong engineering culture. Culture isn't something you can retrofit—it needs to be intentional from day one.\n\n### Define Your Engineering Values\n\nStart by clearly defining what your engineering organization stands for:\n\n- **Quality**: We ship code we're proud of\n- **Collaboration**: We succeed together or fail together  \n- **Growth**: We invest in continuous learning and improvement\n- **Impact**: We build things that matter to users and the business\n\n### Hire for Culture Add, Not Just Culture Fit\n\nAs you scale, resist the temptation to hire people who are exactly like your existing team. Instead, look for candidates who will add to your culture while sharing your core values.\n\n## The Process: Systems That Scale\n\n### 1. Establish Clear Engineering Standards\n\nDocument your coding standards, review processes, and technical guidelines early. This includes:\n\n- Code style guides and linting rules\n- Testing requirements and coverage goals\n- Security and performance standards\n- Documentation expectations\n\n### 2. Implement Effective Code Review\n\nCode review is your quality gate and knowledge sharing mechanism. Establish clear expectations:\n\n- All code must be reviewed by at least one other engineer\n- Reviews should focus on correctness, maintainability, and learning\n- Use automated tools to catch style and basic issues\n- Keep review cycles short (ideally \u003C 24 hours)\n\n### 3. Build Robust CI/CD Pipelines\n\nAutomation becomes critical as teams grow. Invest in:\n\n- Automated testing at all levels (unit, integration, e2e)\n- Automated deployments with rollback capabilities\n- Feature flags for safe, gradual rollouts\n- Monitoring and alerting that catches issues early\n\n## The People: Growing Leaders at Every Level\n\n### Mentorship Programs\n\nCreate formal and informal mentorship opportunities:\n\n- Pair junior engineers with senior team members\n- Encourage cross-team knowledge sharing\n- Provide resources for technical and career growth\n\n### Career Progression Paths\n\nBe transparent about career advancement:\n\n- Create clear job ladders for both IC and management tracks\n- Provide regular feedback and growth opportunities\n- Support engineers who want to try different roles or specializations\n\n### Psychological Safety\n\nFoster an environment where people feel safe to:\n\n- Ask questions without judgment\n- Admit mistakes and learn from them\n- Propose new ideas and challenge existing approaches\n- Take calculated risks\n\n## The Challenges: What to Watch Out For\n\n### Communication Overhead\n\nAs teams grow, communication becomes exponentially more complex. Combat this with:\n\n- Clear documentation and decision logs\n- Regular all-hands and team sync meetings\n- Cross-functional embedded teams\n- Transparent planning and prioritization processes\n\n### Technical Debt\n\nRapid growth often leads to shortcuts. Manage technical debt by:\n\n- Allocating time in each sprint for refactoring\n- Tracking technical debt as you would customer-facing features\n- Making architectural decisions that support future growth\n- Regular architecture reviews and tech talks\n\n### Maintaining Innovation\n\nDon't let process kill creativity. Preserve innovation through:\n\n- Hack days and exploration time\n- 20% time for experimental projects\n- Innovation challenges and internal conferences\n- Encouraging experimentation with new technologies\n\n## Key Metrics to Track\n\nAs you scale, measure what matters:\n\n- **Developer Velocity**: Lead time from commit to production\n- **Quality**: Bug rates, customer-reported issues, uptime\n- **Engagement**: Employee satisfaction, retention rates\n- **Learning**: Internal mobility, skill development\n\n## Conclusion\n\nScaling engineering teams is as much about people and process as it is about technology. The most successful organizations I've seen focus on building strong foundations early, then evolving their practices as they grow.\n\nRemember that scaling is not just about adding more people—it's about building systems, processes, and culture that enable teams to be effective at any size. Start with strong foundations, measure what matters, and always prioritize the growth and well-being of your team members.\n\nThe investment you make in scaling thoughtfully will pay dividends as your organization continues to grow and tackle increasingly complex challenges.","src/content/blog/building-scalable-teams.md","71fa79a805b9a783",{"html":28,"metadata":29},"\u003Ch1 id=\"building-scalable-engineering-teams\">Building Scalable Engineering Teams\u003C/h1>\n\u003Cp>Scaling an engineering team is one of the most challenging aspects of growing a technology company. Over the past several years, I’ve had the privilege of leading teams through rapid growth phases, from small startup squads to large enterprise organizations. Here are the key lessons I’ve learned about building and scaling high-performing engineering teams.\u003C/p>\n\u003Ch2 id=\"the-foundation-culture-first\">The Foundation: Culture First\u003C/h2>\n\u003Cp>Before you hire your first engineer or implement any process, you need to establish a strong engineering culture. Culture isn’t something you can retrofit—it needs to be intentional from day one.\u003C/p>\n\u003Ch3 id=\"define-your-engineering-values\">Define Your Engineering Values\u003C/h3>\n\u003Cp>Start by clearly defining what your engineering organization stands for:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Quality\u003C/strong>: We ship code we’re proud of\u003C/li>\n\u003Cli>\u003Cstrong>Collaboration\u003C/strong>: We succeed together or fail together\u003C/li>\n\u003Cli>\u003Cstrong>Growth\u003C/strong>: We invest in continuous learning and improvement\u003C/li>\n\u003Cli>\u003Cstrong>Impact\u003C/strong>: We build things that matter to users and the business\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"hire-for-culture-add-not-just-culture-fit\">Hire for Culture Add, Not Just Culture Fit\u003C/h3>\n\u003Cp>As you scale, resist the temptation to hire people who are exactly like your existing team. Instead, look for candidates who will add to your culture while sharing your core values.\u003C/p>\n\u003Ch2 id=\"the-process-systems-that-scale\">The Process: Systems That Scale\u003C/h2>\n\u003Ch3 id=\"1-establish-clear-engineering-standards\">1. Establish Clear Engineering Standards\u003C/h3>\n\u003Cp>Document your coding standards, review processes, and technical guidelines early. This includes:\u003C/p>\n\u003Cul>\n\u003Cli>Code style guides and linting rules\u003C/li>\n\u003Cli>Testing requirements and coverage goals\u003C/li>\n\u003Cli>Security and performance standards\u003C/li>\n\u003Cli>Documentation expectations\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-implement-effective-code-review\">2. Implement Effective Code Review\u003C/h3>\n\u003Cp>Code review is your quality gate and knowledge sharing mechanism. Establish clear expectations:\u003C/p>\n\u003Cul>\n\u003Cli>All code must be reviewed by at least one other engineer\u003C/li>\n\u003Cli>Reviews should focus on correctness, maintainability, and learning\u003C/li>\n\u003Cli>Use automated tools to catch style and basic issues\u003C/li>\n\u003Cli>Keep review cycles short (ideally &#x3C; 24 hours)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-build-robust-cicd-pipelines\">3. Build Robust CI/CD Pipelines\u003C/h3>\n\u003Cp>Automation becomes critical as teams grow. Invest in:\u003C/p>\n\u003Cul>\n\u003Cli>Automated testing at all levels (unit, integration, e2e)\u003C/li>\n\u003Cli>Automated deployments with rollback capabilities\u003C/li>\n\u003Cli>Feature flags for safe, gradual rollouts\u003C/li>\n\u003Cli>Monitoring and alerting that catches issues early\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"the-people-growing-leaders-at-every-level\">The People: Growing Leaders at Every Level\u003C/h2>\n\u003Ch3 id=\"mentorship-programs\">Mentorship Programs\u003C/h3>\n\u003Cp>Create formal and informal mentorship opportunities:\u003C/p>\n\u003Cul>\n\u003Cli>Pair junior engineers with senior team members\u003C/li>\n\u003Cli>Encourage cross-team knowledge sharing\u003C/li>\n\u003Cli>Provide resources for technical and career growth\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"career-progression-paths\">Career Progression Paths\u003C/h3>\n\u003Cp>Be transparent about career advancement:\u003C/p>\n\u003Cul>\n\u003Cli>Create clear job ladders for both IC and management tracks\u003C/li>\n\u003Cli>Provide regular feedback and growth opportunities\u003C/li>\n\u003Cli>Support engineers who want to try different roles or specializations\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"psychological-safety\">Psychological Safety\u003C/h3>\n\u003Cp>Foster an environment where people feel safe to:\u003C/p>\n\u003Cul>\n\u003Cli>Ask questions without judgment\u003C/li>\n\u003Cli>Admit mistakes and learn from them\u003C/li>\n\u003Cli>Propose new ideas and challenge existing approaches\u003C/li>\n\u003Cli>Take calculated risks\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"the-challenges-what-to-watch-out-for\">The Challenges: What to Watch Out For\u003C/h2>\n\u003Ch3 id=\"communication-overhead\">Communication Overhead\u003C/h3>\n\u003Cp>As teams grow, communication becomes exponentially more complex. Combat this with:\u003C/p>\n\u003Cul>\n\u003Cli>Clear documentation and decision logs\u003C/li>\n\u003Cli>Regular all-hands and team sync meetings\u003C/li>\n\u003Cli>Cross-functional embedded teams\u003C/li>\n\u003Cli>Transparent planning and prioritization processes\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"technical-debt\">Technical Debt\u003C/h3>\n\u003Cp>Rapid growth often leads to shortcuts. Manage technical debt by:\u003C/p>\n\u003Cul>\n\u003Cli>Allocating time in each sprint for refactoring\u003C/li>\n\u003Cli>Tracking technical debt as you would customer-facing features\u003C/li>\n\u003Cli>Making architectural decisions that support future growth\u003C/li>\n\u003Cli>Regular architecture reviews and tech talks\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"maintaining-innovation\">Maintaining Innovation\u003C/h3>\n\u003Cp>Don’t let process kill creativity. Preserve innovation through:\u003C/p>\n\u003Cul>\n\u003Cli>Hack days and exploration time\u003C/li>\n\u003Cli>20% time for experimental projects\u003C/li>\n\u003Cli>Innovation challenges and internal conferences\u003C/li>\n\u003Cli>Encouraging experimentation with new technologies\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"key-metrics-to-track\">Key Metrics to Track\u003C/h2>\n\u003Cp>As you scale, measure what matters:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Developer Velocity\u003C/strong>: Lead time from commit to production\u003C/li>\n\u003Cli>\u003Cstrong>Quality\u003C/strong>: Bug rates, customer-reported issues, uptime\u003C/li>\n\u003Cli>\u003Cstrong>Engagement\u003C/strong>: Employee satisfaction, retention rates\u003C/li>\n\u003Cli>\u003Cstrong>Learning\u003C/strong>: Internal mobility, skill development\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>Scaling engineering teams is as much about people and process as it is about technology. The most successful organizations I’ve seen focus on building strong foundations early, then evolving their practices as they grow.\u003C/p>\n\u003Cp>Remember that scaling is not just about adding more people—it’s about building systems, processes, and culture that enable teams to be effective at any size. Start with strong foundations, measure what matters, and always prioritize the growth and well-being of your team members.\u003C/p>\n\u003Cp>The investment you make in scaling thoughtfully will pay dividends as your organization continues to grow and tackle increasingly complex challenges.\u003C/p>",{"headings":30,"localImagePaths":87,"remoteImagePaths":88,"frontmatter":89,"imagePaths":92},[31,34,38,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84],{"depth":32,"slug":33,"text":14},1,"building-scalable-engineering-teams",{"depth":35,"slug":36,"text":37},2,"the-foundation-culture-first","The Foundation: Culture First",{"depth":39,"slug":40,"text":41},3,"define-your-engineering-values","Define Your Engineering Values",{"depth":39,"slug":43,"text":44},"hire-for-culture-add-not-just-culture-fit","Hire for Culture Add, Not Just Culture Fit",{"depth":35,"slug":46,"text":47},"the-process-systems-that-scale","The Process: Systems That Scale",{"depth":39,"slug":49,"text":50},"1-establish-clear-engineering-standards","1. Establish Clear Engineering Standards",{"depth":39,"slug":52,"text":53},"2-implement-effective-code-review","2. Implement Effective Code Review",{"depth":39,"slug":55,"text":56},"3-build-robust-cicd-pipelines","3. Build Robust CI/CD Pipelines",{"depth":35,"slug":58,"text":59},"the-people-growing-leaders-at-every-level","The People: Growing Leaders at Every Level",{"depth":39,"slug":61,"text":62},"mentorship-programs","Mentorship Programs",{"depth":39,"slug":64,"text":65},"career-progression-paths","Career Progression Paths",{"depth":39,"slug":67,"text":68},"psychological-safety","Psychological Safety",{"depth":35,"slug":70,"text":71},"the-challenges-what-to-watch-out-for","The Challenges: What to Watch Out For",{"depth":39,"slug":73,"text":74},"communication-overhead","Communication Overhead",{"depth":39,"slug":76,"text":77},"technical-debt","Technical Debt",{"depth":39,"slug":79,"text":80},"maintaining-innovation","Maintaining Innovation",{"depth":35,"slug":82,"text":83},"key-metrics-to-track","Key Metrics to Track",{"depth":35,"slug":85,"text":86},"conclusion","Conclusion",[],[],{"title":14,"description":15,"pubDate":90,"tags":91,"readingTime":23},["Date","2024-01-15T00:00:00.000Z"],[18,19,20],[],"building-scalable-teams.md","modern-react-patterns",{"id":94,"data":96,"body":106,"filePath":107,"digest":108,"rendered":109,"legacyId":179},{"title":97,"description":98,"pubDate":99,"tags":100,"draft":21,"author":22,"readingTime":105},"Modern React Patterns for 2024","Exploring the latest React patterns and best practices that are shaping how we build applications today.",["Date","2024-01-10T00:00:00.000Z"],[101,102,103,104],"react","javascript","frontend","patterns","8 min read","# Modern React Patterns for 2024\n\nReact continues to evolve rapidly, and with it, the patterns and best practices that define how we build modern applications. As we move through 2024, several key patterns have emerged that are shaping the future of React development. Let's explore these patterns and understand when and how to apply them effectively.\n\n## Server Components: The Game Changer\n\nReact Server Components represent one of the most significant shifts in how we think about React applications. They allow us to render components on the server, reducing the amount of JavaScript sent to the client.\n\n### Key Benefits\n\n- **Reduced Bundle Size**: Server components don't add to your client-side JavaScript bundle\n- **Direct Database Access**: Fetch data directly in your components without API routes\n- **Improved Performance**: Faster initial page loads and better Core Web Vitals\n\n### Example Pattern\n\n```jsx\n// app/posts/page.js (Server Component)\nimport { getPosts } from '@/lib/database'\nimport PostList from './PostList'\n\nexport default async function PostsPage() {\n  const posts = await getPosts() // Direct database access\n  \n  return (\n    \u003Cdiv>\n      \u003Ch1>Latest Posts\u003C/h1>\n      \u003CPostList posts={posts} />\n    \u003C/div>\n  )\n}\n```\n\n## Concurrent Features and Suspense\n\nReact's concurrent features, including Suspense boundaries and streaming, enable better user experiences through progressive loading.\n\n### Suspense for Data Fetching\n\n```jsx\nimport { Suspense } from 'react'\nimport PostList from './PostList'\nimport PostSkeleton from './PostSkeleton'\n\nfunction App() {\n  return (\n    \u003CSuspense fallback={\u003CPostSkeleton />}>\n      \u003CPostList />\n    \u003C/Suspense>\n  )\n}\n```\n\n### Error Boundaries with Suspense\n\n```jsx\nimport { ErrorBoundary } from 'react-error-boundary'\n\nfunction ErrorFallback({error, resetErrorBoundary}) {\n  return (\n    \u003Cdiv role=\"alert\">\n      \u003Ch2>Something went wrong:\u003C/h2>\n      \u003Cpre>{error.message}\u003C/pre>\n      \u003Cbutton onClick={resetErrorBoundary}>Try again\u003C/button>\n    \u003C/div>\n  )\n}\n\nfunction App() {\n  return (\n    \u003CErrorBoundary FallbackComponent={ErrorFallback}>\n      \u003CSuspense fallback={\u003CLoading />}>\n        \u003CDataComponent />\n      \u003C/Suspense>\n    \u003C/ErrorBoundary>\n  )\n}\n```\n\n## Advanced Hook Patterns\n\n### Custom Hooks for Data Fetching\n\n```jsx\nfunction usePost(id) {\n  const [post, setPost] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  \n  useEffect(() => {\n    async function fetchPost() {\n      try {\n        setLoading(true)\n        const response = await fetch(`/api/posts/${id}`)\n        if (!response.ok) throw new Error('Failed to fetch')\n        const postData = await response.json()\n        setPost(postData)\n      } catch (err) {\n        setError(err.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n    \n    fetchPost()\n  }, [id])\n  \n  return { post, loading, error }\n}\n```\n\n### Compound Component Pattern\n\n```jsx\nfunction Modal({ children, onClose }) {\n  return (\n    \u003Cdiv className=\"modal-overlay\" onClick={onClose}>\n      \u003Cdiv className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        {children}\n      \u003C/div>\n    \u003C/div>\n  )\n}\n\nModal.Header = function ModalHeader({ children }) {\n  return \u003Cdiv className=\"modal-header\">{children}\u003C/div>\n}\n\nModal.Body = function ModalBody({ children }) {\n  return \u003Cdiv className=\"modal-body\">{children}\u003C/div>\n}\n\nModal.Footer = function ModalFooter({ children }) {\n  return \u003Cdiv className=\"modal-footer\">{children}\u003C/div>\n}\n\n// Usage\nfunction App() {\n  return (\n    \u003CModal onClose={handleClose}>\n      \u003CModal.Header>\n        \u003Ch2>Confirm Action\u003C/h2>\n      \u003C/Modal.Header>\n      \u003CModal.Body>\n        \u003Cp>Are you sure you want to proceed?\u003C/p>\n      \u003C/Modal.Body>\n      \u003CModal.Footer>\n        \u003Cbutton onClick={handleConfirm}>Confirm\u003C/button>\n        \u003Cbutton onClick={handleClose}>Cancel\u003C/button>\n      \u003C/Modal.Footer>\n    \u003C/Modal>\n  )\n}\n```\n\n## State Management Evolution\n\n### Zustand for Simple State\n\n```jsx\nimport { create } from 'zustand'\n\nconst useStore = create((set) => ({\n  count: 0,\n  increment: () => set((state) => ({ count: state.count + 1 })),\n  decrement: () => set((state) => ({ count: state.count - 1 })),\n  reset: () => set({ count: 0 }),\n}))\n\nfunction Counter() {\n  const { count, increment, decrement, reset } = useStore()\n  \n  return (\n    \u003Cdiv>\n      \u003Cspan>{count}\u003C/span>\n      \u003Cbutton onClick={increment}>+\u003C/button>\n      \u003Cbutton onClick={decrement}>-\u003C/button>\n      \u003Cbutton onClick={reset}>Reset\u003C/button>\n    \u003C/div>\n  )\n}\n```\n\n### useReducer for Complex State Logic\n\n```jsx\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      }\n    case 'TOGGLE_TODO':\n      return {\n        ...state,\n        todos: state.todos.map(todo =>\n          todo.id === action.payload\n            ? { ...todo, completed: !todo.completed }\n            : todo\n        )\n      }\n    case 'DELETE_TODO':\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      }\n    default:\n      return state\n  }\n}\n\nfunction TodoApp() {\n  const [state, dispatch] = useReducer(todoReducer, { todos: [] })\n  \n  const addTodo = (text) => {\n    dispatch({\n      type: 'ADD_TODO',\n      payload: { id: Date.now(), text, completed: false }\n    })\n  }\n  \n  return (\n    // JSX for todo app\n  )\n}\n```\n\n## Performance Optimization Patterns\n\n### useMemo and useCallback Strategic Usage\n\n```jsx\nfunction ExpensiveComponent({ items, onItemClick }) {\n  // Memoize expensive calculations\n  const expensiveValue = useMemo(() => {\n    return items.reduce((acc, item) => acc + item.value, 0)\n  }, [items])\n  \n  // Memoize callbacks to prevent unnecessary re-renders\n  const handleClick = useCallback((id) => {\n    onItemClick(id)\n  }, [onItemClick])\n  \n  return (\n    \u003Cdiv>\n      \u003Cp>Total: {expensiveValue}\u003C/p>\n      {items.map(item => (\n        \u003CItem \n          key={item.id} \n          item={item} \n          onClick={handleClick}\n        />\n      ))}\n    \u003C/div>\n  )\n}\n```\n\n### React.memo with Custom Comparison\n\n```jsx\nconst ListItem = React.memo(function ListItem({ item, onEdit }) {\n  return (\n    \u003Cdiv>\n      \u003Ch3>{item.title}\u003C/h3>\n      \u003Cp>{item.description}\u003C/p>\n      \u003Cbutton onClick={() => onEdit(item.id)}>Edit\u003C/button>\n    \u003C/div>\n  )\n}, (prevProps, nextProps) => {\n  // Custom comparison logic\n  return prevProps.item.id === nextProps.item.id &&\n         prevProps.item.title === nextProps.item.title &&\n         prevProps.item.description === nextProps.item.description\n})\n```\n\n## Form Handling with React Hook Form\n\n```jsx\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { z } from 'zod'\n\nconst schema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n  confirmPassword: z.string()\n}).refine(data => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"]\n})\n\nfunction SignupForm() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting }\n  } = useForm({\n    resolver: zodResolver(schema)\n  })\n  \n  const onSubmit = async (data) => {\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    console.log(data)\n  }\n  \n  return (\n    \u003Cform onSubmit={handleSubmit(onSubmit)}>\n      \u003Cinput\n        {...register('email')}\n        type=\"email\"\n        placeholder=\"Email\"\n      />\n      {errors.email && \u003Cspan>{errors.email.message}\u003C/span>}\n      \n      \u003Cinput\n        {...register('password')}\n        type=\"password\"\n        placeholder=\"Password\"\n      />\n      {errors.password && \u003Cspan>{errors.password.message}\u003C/span>}\n      \n      \u003Cbutton type=\"submit\" disabled={isSubmitting}>\n        {isSubmitting ? 'Creating Account...' : 'Sign Up'}\n      \u003C/button>\n    \u003C/form>\n  )\n}\n```\n\n## Testing Modern React Applications\n\n### Testing Custom Hooks\n\n```jsx\nimport { renderHook, act } from '@testing-library/react'\nimport { useCounter } from './useCounter'\n\ntest('should increment counter', () => {\n  const { result } = renderHook(() => useCounter())\n  \n  act(() => {\n    result.current.increment()\n  })\n  \n  expect(result.current.count).toBe(1)\n})\n```\n\n### Testing Components with Suspense\n\n```jsx\nimport { render, screen } from '@testing-library/react'\nimport { Suspense } from 'react'\nimport AsyncComponent from './AsyncComponent'\n\ntest('shows loading state then content', async () => {\n  render(\n    \u003CSuspense fallback={\u003Cdiv>Loading...\u003C/div>}>\n      \u003CAsyncComponent />\n    \u003C/Suspense>\n  )\n  \n  expect(screen.getByText('Loading...')).toBeInTheDocument()\n  \n  await waitFor(() => {\n    expect(screen.getByText('Content loaded')).toBeInTheDocument()\n  })\n})\n```\n\n## Conclusion\n\nThe React ecosystem continues to evolve rapidly, with patterns that emphasize performance, developer experience, and maintainability. Server Components are reshaping how we think about data fetching and rendering, while concurrent features enable better user experiences through progressive loading.\n\nKey takeaways for 2024:\n\n1. **Embrace Server Components** for better performance and simpler data fetching\n2. **Use Suspense strategically** to improve perceived performance\n3. **Choose state management tools** based on complexity needs\n4. **Optimize performance** with memoization and careful re-render management\n5. **Invest in testing** patterns that work with modern React features\n\nAs React continues to evolve, staying current with these patterns will help you build applications that are performant, maintainable, and provide excellent user experiences.","src/content/blog/modern-react-patterns.md","c4e9654cf3b52b7d",{"html":110,"metadata":111},"\u003Ch1 id=\"modern-react-patterns-for-2024\">Modern React Patterns for 2024\u003C/h1>\n\u003Cp>React continues to evolve rapidly, and with it, the patterns and best practices that define how we build modern applications. As we move through 2024, several key patterns have emerged that are shaping the future of React development. Let’s explore these patterns and understand when and how to apply them effectively.\u003C/p>\n\u003Ch2 id=\"server-components-the-game-changer\">Server Components: The Game Changer\u003C/h2>\n\u003Cp>React Server Components represent one of the most significant shifts in how we think about React applications. They allow us to render components on the server, reducing the amount of JavaScript sent to the client.\u003C/p>\n\u003Ch3 id=\"key-benefits\">Key Benefits\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Reduced Bundle Size\u003C/strong>: Server components don’t add to your client-side JavaScript bundle\u003C/li>\n\u003Cli>\u003Cstrong>Direct Database Access\u003C/strong>: Fetch data directly in your components without API routes\u003C/li>\n\u003Cli>\u003Cstrong>Improved Performance\u003C/strong>: Faster initial page loads and better Core Web Vitals\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"example-pattern\">Example Pattern\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// app/posts/page.js (Server Component)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { getPosts } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '@/lib/database'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> PostList \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> './PostList'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#F97583\"> default\u003C/span>\u003Cspan style=\"color:#F97583\"> async\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#B392F0\"> PostsPage\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> posts\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#B392F0\"> getPosts\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#6A737D\">// Direct database access\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Latest Posts&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">PostList\u003C/span>\u003Cspan style=\"color:#B392F0\"> posts\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{posts} />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"concurrent-features-and-suspense\">Concurrent Features and Suspense\u003C/h2>\n\u003Cp>React’s concurrent features, including Suspense boundaries and streaming, enable better user experiences through progressive loading.\u003C/p>\n\u003Ch3 id=\"suspense-for-data-fetching\">Suspense for Data Fetching\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { Suspense } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'react'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> PostList \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> './PostList'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> PostSkeleton \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> './PostSkeleton'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> App\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">Suspense\u003C/span>\u003Cspan style=\"color:#B392F0\"> fallback\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">PostSkeleton\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">PostList\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">Suspense\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"error-boundaries-with-suspense\">Error Boundaries with Suspense\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { ErrorBoundary } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'react-error-boundary'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> ErrorFallback\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({\u003C/span>\u003Cspan style=\"color:#FFAB70\">error\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">resetErrorBoundary\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> role\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"alert\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Something went wrong:&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">h2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">pre\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{error.message}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">pre\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#B392F0\"> onClick\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{resetErrorBoundary}>Try again&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> App\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">ErrorBoundary\u003C/span>\u003Cspan style=\"color:#B392F0\"> FallbackComponent\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{ErrorFallback}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">Suspense\u003C/span>\u003Cspan style=\"color:#B392F0\"> fallback\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">Loading\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">DataComponent\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">Suspense\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">ErrorBoundary\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"advanced-hook-patterns\">Advanced Hook Patterns\u003C/h2>\n\u003Ch3 id=\"custom-hooks-for-data-fetching\">Custom Hooks for Data Fetching\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> usePost\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">id\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#79B8FF\">post\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">setPost\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> useState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#79B8FF\">loading\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">setLoading\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> useState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#79B8FF\">error\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">setError\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> useState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  useEffect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    async\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#B392F0\"> fetchPost\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      try\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        setLoading\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> response\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#B392F0\"> fetch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`/api/posts/${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">id\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#F97583\">!\u003C/span>\u003Cspan style=\"color:#E1E4E8\">response.ok) \u003C/span>\u003Cspan style=\"color:#F97583\">throw\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#B392F0\"> Error\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Failed to fetch'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> postData\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> response.\u003C/span>\u003Cspan style=\"color:#B392F0\">json\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        setPost\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(postData)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      } \u003C/span>\u003Cspan style=\"color:#F97583\">catch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (err) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        setError\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(err.message)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      } \u003C/span>\u003Cspan style=\"color:#F97583\">finally\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        setLoading\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">false\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    fetchPost\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }, [id])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { post, loading, error }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"compound-component-pattern\">Compound Component Pattern\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> Modal\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ \u003C/span>\u003Cspan style=\"color:#FFAB70\">children\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">onClose\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> className\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"modal-overlay\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> onClick\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{onClose}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> className\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"modal-content\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> onClick\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#FFAB70\">e\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> e.\u003C/span>\u003Cspan style=\"color:#B392F0\">stopPropagation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        {children}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Modal.\u003C/span>\u003Cspan style=\"color:#B392F0\">Header\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#B392F0\"> ModalHeader\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ \u003C/span>\u003Cspan style=\"color:#FFAB70\">children\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> className\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"modal-header\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{children}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Modal.\u003C/span>\u003Cspan style=\"color:#B392F0\">Body\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#B392F0\"> ModalBody\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ \u003C/span>\u003Cspan style=\"color:#FFAB70\">children\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> className\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"modal-body\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{children}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Modal.\u003C/span>\u003Cspan style=\"color:#B392F0\">Footer\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#B392F0\"> ModalFooter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ \u003C/span>\u003Cspan style=\"color:#FFAB70\">children\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> className\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"modal-footer\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{children}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Usage\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> App\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">Modal\u003C/span>\u003Cspan style=\"color:#B392F0\"> onClose\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{handleClose}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">Modal.Header\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Confirm Action&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">h2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">Modal.Header\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">Modal.Body\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Are you sure you want to proceed?&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">Modal.Body\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">Modal.Footer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#B392F0\"> onClick\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{handleConfirm}>Confirm&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#B392F0\"> onClick\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{handleClose}>Cancel&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">Modal.Footer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">Modal\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"state-management-evolution\">State Management Evolution\u003C/h2>\n\u003Ch3 id=\"zustand-for-simple-state\">Zustand for Simple State\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { create } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'zustand'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> useStore\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> create\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((\u003C/span>\u003Cspan style=\"color:#FFAB70\">set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  count: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  increment\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((\u003C/span>\u003Cspan style=\"color:#FFAB70\">state\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ({ count: state.count \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> })),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  decrement\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((\u003C/span>\u003Cspan style=\"color:#FFAB70\">state\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ({ count: state.count \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> })),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  reset\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ count: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> Counter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">count\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">increment\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">decrement\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">reset\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> } \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> useStore\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">span\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{count}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">span\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#B392F0\"> onClick\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{increment}>+&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#B392F0\"> onClick\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{decrement}>-&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#B392F0\"> onClick\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{reset}>Reset&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"usereducer-for-complex-state-logic\">useReducer for Complex State Logic\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> todoReducer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">state\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">action\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  switch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (action.type) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    case\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'ADD_TODO'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        ...\u003C/span>\u003Cspan style=\"color:#E1E4E8\">state,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        todos: [\u003C/span>\u003Cspan style=\"color:#F97583\">...\u003C/span>\u003Cspan style=\"color:#E1E4E8\">state.todos, action.payload]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    case\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'TOGGLE_TODO'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        ...\u003C/span>\u003Cspan style=\"color:#E1E4E8\">state,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        todos: state.todos.\u003C/span>\u003Cspan style=\"color:#B392F0\">map\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">todo\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          todo.id \u003C/span>\u003Cspan style=\"color:#F97583\">===\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> action.payload\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            ?\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#F97583\">...\u003C/span>\u003Cspan style=\"color:#E1E4E8\">todo, completed: \u003C/span>\u003Cspan style=\"color:#F97583\">!\u003C/span>\u003Cspan style=\"color:#E1E4E8\">todo.completed }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            :\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> todo\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    case\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'DELETE_TODO'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        ...\u003C/span>\u003Cspan style=\"color:#E1E4E8\">state,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        todos: state.todos.\u003C/span>\u003Cspan style=\"color:#B392F0\">filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">todo\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> todo.id \u003C/span>\u003Cspan style=\"color:#F97583\">!==\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> action.payload)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    default\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> state\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> TodoApp\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#79B8FF\">state\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">dispatch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> useReducer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(todoReducer, { todos: [] })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#B392F0\"> addTodo\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">text\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    dispatch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      type: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'ADD_TODO'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      payload: { id: Date.\u003C/span>\u003Cspan style=\"color:#B392F0\">now\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(), text, completed: \u003C/span>\u003Cspan style=\"color:#79B8FF\">false\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // JSX for todo app\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"performance-optimization-patterns\">Performance Optimization Patterns\u003C/h2>\n\u003Ch3 id=\"usememo-and-usecallback-strategic-usage\">useMemo and useCallback Strategic Usage\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> ExpensiveComponent\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ \u003C/span>\u003Cspan style=\"color:#FFAB70\">items\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">onItemClick\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // Memoize expensive calculations\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> expensiveValue\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> useMemo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> items.\u003C/span>\u003Cspan style=\"color:#B392F0\">reduce\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((\u003C/span>\u003Cspan style=\"color:#FFAB70\">acc\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">item\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> acc \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> item.value, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }, [items])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // Memoize callbacks to prevent unnecessary re-renders\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> handleClick\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> useCallback\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((\u003C/span>\u003Cspan style=\"color:#FFAB70\">id\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    onItemClick\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(id)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }, [onItemClick])\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Total: {expensiveValue}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {items.\u003C/span>\u003Cspan style=\"color:#B392F0\">map\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">item\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">Item\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          key\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{item.id} \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          item\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{item} \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          onClick\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{handleClick}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      ))}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"reactmemo-with-custom-comparison\">React.memo with Custom Comparison\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> ListItem\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> React.\u003C/span>\u003Cspan style=\"color:#B392F0\">memo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> ListItem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ \u003C/span>\u003Cspan style=\"color:#FFAB70\">item\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">onEdit\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{item.title}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">h3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{item.description}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#B392F0\"> onClick\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> onEdit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(item.id)}>Edit&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}, (\u003C/span>\u003Cspan style=\"color:#FFAB70\">prevProps\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">nextProps\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // Custom comparison logic\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> prevProps.item.id \u003C/span>\u003Cspan style=\"color:#F97583\">===\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> nextProps.item.id \u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;&#x26;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">         prevProps.item.title \u003C/span>\u003Cspan style=\"color:#F97583\">===\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> nextProps.item.title \u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;&#x26;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">         prevProps.item.description \u003C/span>\u003Cspan style=\"color:#F97583\">===\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> nextProps.item.description\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">})\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"form-handling-with-react-hook-form\">Form Handling with React Hook Form\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { useForm } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'react-hook-form'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { zodResolver } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '@hookform/resolvers/zod'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { z } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'zod'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> schema\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> z.\u003C/span>\u003Cspan style=\"color:#B392F0\">object\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  email: z.\u003C/span>\u003Cspan style=\"color:#B392F0\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">().\u003C/span>\u003Cspan style=\"color:#B392F0\">email\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  password: z.\u003C/span>\u003Cspan style=\"color:#B392F0\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">().\u003C/span>\u003Cspan style=\"color:#B392F0\">min\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  confirmPassword: z.\u003C/span>\u003Cspan style=\"color:#B392F0\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}).\u003C/span>\u003Cspan style=\"color:#B392F0\">refine\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">data\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> data.password \u003C/span>\u003Cspan style=\"color:#F97583\">===\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> data.confirmPassword, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  message: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Passwords don't match\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  path: [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"confirmPassword\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">})\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> SignupForm\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    register\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    handleSubmit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">    formState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: { \u003C/span>\u003Cspan style=\"color:#79B8FF\">errors\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">isSubmitting\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  } \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> useForm\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    resolver: \u003C/span>\u003Cspan style=\"color:#B392F0\">zodResolver\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(schema)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#B392F0\"> onSubmit\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> async\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">data\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    await\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#79B8FF\"> Promise\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">resolve\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#B392F0\"> setTimeout\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(resolve, \u003C/span>\u003Cspan style=\"color:#79B8FF\">1000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    console.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(data)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">form\u003C/span>\u003Cspan style=\"color:#B392F0\"> onSubmit\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003Cspan style=\"color:#B392F0\">handleSubmit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(onSubmit)}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">input\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        {\u003C/span>\u003Cspan style=\"color:#F97583\">...\u003C/span>\u003Cspan style=\"color:#B392F0\">register\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'email'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"email\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        placeholder\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Email\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {errors.email \u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">span\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{errors.email.message}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">span\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">input\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        {\u003C/span>\u003Cspan style=\"color:#F97583\">...\u003C/span>\u003Cspan style=\"color:#B392F0\">register\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'password'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"password\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        placeholder\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Password\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {errors.password \u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">span\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{errors.password.message}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">span\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#B392F0\"> type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"submit\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> disabled\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{isSubmitting}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        {isSubmitting \u003C/span>\u003Cspan style=\"color:#F97583\">?\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'Creating Account...'\u003C/span>\u003Cspan style=\"color:#F97583\"> :\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'Sign Up'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">form\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"testing-modern-react-applications\">Testing Modern React Applications\u003C/h2>\n\u003Ch3 id=\"testing-custom-hooks\">Testing Custom Hooks\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { renderHook, act } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '@testing-library/react'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { useCounter } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> './useCounter'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">test\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'should increment counter'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">result\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> } \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> renderHook\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> useCounter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  act\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    result.current.\u003C/span>\u003Cspan style=\"color:#B392F0\">increment\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  expect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result.current.count).\u003C/span>\u003Cspan style=\"color:#B392F0\">toBe\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">})\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"testing-components-with-suspense\">Testing Components with Suspense\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { render, screen } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> '@testing-library/react'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { Suspense } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'react'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> AsyncComponent \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> './AsyncComponent'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">test\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'shows loading state then content'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">async\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  render\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">Suspense\u003C/span>\u003Cspan style=\"color:#B392F0\"> fallback\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Loading...&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">AsyncComponent\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">Suspense\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  expect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(screen.\u003C/span>\u003Cspan style=\"color:#B392F0\">getByText\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Loading...'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)).\u003C/span>\u003Cspan style=\"color:#B392F0\">toBeInTheDocument\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  await\u003C/span>\u003Cspan style=\"color:#B392F0\"> waitFor\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    expect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(screen.\u003C/span>\u003Cspan style=\"color:#B392F0\">getByText\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Content loaded'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)).\u003C/span>\u003Cspan style=\"color:#B392F0\">toBeInTheDocument\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">})\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>The React ecosystem continues to evolve rapidly, with patterns that emphasize performance, developer experience, and maintainability. Server Components are reshaping how we think about data fetching and rendering, while concurrent features enable better user experiences through progressive loading.\u003C/p>\n\u003Cp>Key takeaways for 2024:\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>Embrace Server Components\u003C/strong> for better performance and simpler data fetching\u003C/li>\n\u003Cli>\u003Cstrong>Use Suspense strategically\u003C/strong> to improve perceived performance\u003C/li>\n\u003Cli>\u003Cstrong>Choose state management tools\u003C/strong> based on complexity needs\u003C/li>\n\u003Cli>\u003Cstrong>Optimize performance\u003C/strong> with memoization and careful re-render management\u003C/li>\n\u003Cli>\u003Cstrong>Invest in testing\u003C/strong> patterns that work with modern React features\u003C/li>\n\u003C/ol>\n\u003Cp>As React continues to evolve, staying current with these patterns will help you build applications that are performant, maintainable, and provide excellent user experiences.\u003C/p>",{"headings":112,"localImagePaths":173,"remoteImagePaths":174,"frontmatter":175,"imagePaths":178},[113,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172],{"depth":32,"slug":114,"text":97},"modern-react-patterns-for-2024",{"depth":35,"slug":116,"text":117},"server-components-the-game-changer","Server Components: The Game Changer",{"depth":39,"slug":119,"text":120},"key-benefits","Key Benefits",{"depth":39,"slug":122,"text":123},"example-pattern","Example Pattern",{"depth":35,"slug":125,"text":126},"concurrent-features-and-suspense","Concurrent Features and Suspense",{"depth":39,"slug":128,"text":129},"suspense-for-data-fetching","Suspense for Data Fetching",{"depth":39,"slug":131,"text":132},"error-boundaries-with-suspense","Error Boundaries with Suspense",{"depth":35,"slug":134,"text":135},"advanced-hook-patterns","Advanced Hook Patterns",{"depth":39,"slug":137,"text":138},"custom-hooks-for-data-fetching","Custom Hooks for Data Fetching",{"depth":39,"slug":140,"text":141},"compound-component-pattern","Compound Component Pattern",{"depth":35,"slug":143,"text":144},"state-management-evolution","State Management Evolution",{"depth":39,"slug":146,"text":147},"zustand-for-simple-state","Zustand for Simple State",{"depth":39,"slug":149,"text":150},"usereducer-for-complex-state-logic","useReducer for Complex State Logic",{"depth":35,"slug":152,"text":153},"performance-optimization-patterns","Performance Optimization Patterns",{"depth":39,"slug":155,"text":156},"usememo-and-usecallback-strategic-usage","useMemo and useCallback Strategic Usage",{"depth":39,"slug":158,"text":159},"reactmemo-with-custom-comparison","React.memo with Custom Comparison",{"depth":35,"slug":161,"text":162},"form-handling-with-react-hook-form","Form Handling with React Hook Form",{"depth":35,"slug":164,"text":165},"testing-modern-react-applications","Testing Modern React Applications",{"depth":39,"slug":167,"text":168},"testing-custom-hooks","Testing Custom Hooks",{"depth":39,"slug":170,"text":171},"testing-components-with-suspense","Testing Components with Suspense",{"depth":35,"slug":85,"text":86},[],[],{"title":97,"description":98,"pubDate":176,"tags":177,"readingTime":105},["Date","2024-01-10T00:00:00.000Z"],[101,102,103,104],[],"modern-react-patterns.md","performance-optimization",{"id":180,"data":182,"body":191,"filePath":192,"digest":193,"rendered":194,"legacyId":297},{"title":183,"description":184,"pubDate":185,"tags":186,"draft":21,"author":22,"readingTime":190},"Web Performance Optimization: A Practical Guide","Practical strategies for optimizing web application performance and delivering exceptional user experiences.",["Date","2024-01-05T00:00:00.000Z"],[187,188,189],"performance","web-development","optimization","6 min read","# Web Performance Optimization: A Practical Guide\n\nWeb performance isn't just about making your site fast—it's about creating exceptional user experiences that drive engagement, conversions, and business success. In this comprehensive guide, we'll explore practical strategies for optimizing web application performance across all key metrics.\n\n## Understanding Core Web Vitals\n\nCore Web Vitals are the foundation of modern web performance measurement. These user-centric metrics focus on what actually matters to your users.\n\n### Largest Contentful Paint (LCP)\n**Target: ≤ 2.5 seconds**\n\nLCP measures loading performance by tracking when the largest content element becomes visible.\n\n**Optimization strategies:**\n- Optimize images with modern formats (WebP, AVIF)\n- Implement proper preloading for critical resources\n- Use CDN for faster content delivery\n- Minimize server response times\n\n### First Input Delay (FID)\n**Target: ≤ 100 milliseconds**\n\nFID measures interactivity by tracking the delay between user interaction and browser response.\n\n**Optimization strategies:**\n- Minimize JavaScript execution time\n- Use code splitting to reduce main thread blocking\n- Implement service workers for better resource management\n- Defer non-critical JavaScript\n\n### Cumulative Layout Shift (CLS)\n**Target: ≤ 0.1**\n\nCLS measures visual stability by tracking unexpected layout shifts.\n\n**Optimization strategies:**\n- Always include dimensions for images and videos\n- Reserve space for dynamically loaded content\n- Use CSS transforms instead of changing layout properties\n- Ensure fonts load predictably\n\n## Image Optimization Strategies\n\nImages often account for the majority of page weight. Optimizing them can dramatically improve performance.\n\n### Modern Image Formats\n\n```html\n\u003Cpicture>\n  \u003Csource srcset=\"image.avif\" type=\"image/avif\">\n  \u003Csource srcset=\"image.webp\" type=\"image/webp\">\n  \u003Cimg src=\"image.jpg\" alt=\"Description\" loading=\"lazy\">\n\u003C/picture>\n```\n\n### Responsive Images\n\n```html\n\u003Cimg \n  srcset=\"\n    image-320w.jpg 320w,\n    image-640w.jpg 640w,\n    image-1280w.jpg 1280w\n  \"\n  sizes=\"\n    (max-width: 320px) 280px,\n    (max-width: 640px) 600px,\n    1200px\n  \"\n  src=\"image-640w.jpg\"\n  alt=\"Description\"\n  loading=\"lazy\"\n>\n```\n\n### Lazy Loading Implementation\n\n```javascript\n// Intersection Observer for lazy loading\nconst imageObserver = new IntersectionObserver((entries, observer) => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      const img = entry.target\n      img.src = img.dataset.src\n      img.classList.remove('lazy')\n      observer.unobserve(img)\n    }\n  })\n})\n\ndocument.querySelectorAll('img[data-src]').forEach(img => {\n  imageObserver.observe(img)\n})\n```\n\n## JavaScript Optimization\n\nJavaScript performance directly impacts user experience. Here are key strategies for optimization.\n\n### Code Splitting\n\n```javascript\n// Dynamic imports for code splitting\nconst LazyComponent = lazy(() => import('./LazyComponent'))\n\nfunction App() {\n  return (\n    \u003CSuspense fallback={\u003Cdiv>Loading...\u003C/div>}>\n      \u003CLazyComponent />\n    \u003C/Suspense>\n  )\n}\n```\n\n### Bundle Analysis\n\n```bash\n# Analyze your bundle size\nnpm install --save-dev webpack-bundle-analyzer\n\n# Add to package.json scripts\n\"analyze\": \"npm run build && npx webpack-bundle-analyzer build/static/js/*.js\"\n```\n\n### Tree Shaking\n\n```javascript\n// Import only what you need\nimport { debounce } from 'lodash/debounce'  // Good\nimport _ from 'lodash'  // Bad - imports entire library\n```\n\n## CSS Performance\n\nCSS can block rendering and impact performance. Optimize it properly.\n\n### Critical CSS\n\n```html\n\u003C!-- Inline critical CSS -->\n\u003Cstyle>\n  /* Critical above-the-fold styles */\n  .header { /* styles */ }\n  .hero { /* styles */ }\n\u003C/style>\n\n\u003C!-- Load non-critical CSS asynchronously -->\n\u003Clink rel=\"preload\" href=\"styles.css\" as=\"style\" onload=\"this.onload=null;this.rel='stylesheet'\">\n```\n\n### CSS Containment\n\n```css\n.component {\n  contain: layout style paint;\n}\n\n.list-item {\n  contain: layout;\n}\n```\n\n## Resource Loading Optimization\n\n### Preloading Critical Resources\n\n```html\n\u003C!-- Preload critical fonts -->\n\u003Clink rel=\"preload\" href=\"font.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n\n\u003C!-- Preload critical images -->\n\u003Clink rel=\"preload\" href=\"hero-image.jpg\" as=\"image\">\n\n\u003C!-- Prefetch likely next page resources -->\n\u003Clink rel=\"prefetch\" href=\"/next-page.html\">\n```\n\n### Service Worker for Caching\n\n```javascript\n// sw.js\nconst CACHE_NAME = 'app-cache-v1'\nconst STATIC_ASSETS = [\n  '/',\n  '/styles.css',\n  '/app.js',\n  '/offline.html'\n]\n\nself.addEventListener('install', event => {\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then(cache => cache.addAll(STATIC_ASSETS))\n  )\n})\n\nself.addEventListener('fetch', event => {\n  event.respondWith(\n    caches.match(event.request)\n      .then(response => {\n        return response || fetch(event.request)\n      })\n      .catch(() => caches.match('/offline.html'))\n  )\n})\n```\n\n## Database and API Optimization\n\nBackend performance is crucial for overall user experience.\n\n### Database Query Optimization\n\n```sql\n-- Add indexes for frequently queried columns\nCREATE INDEX idx_user_email ON users(email);\n\n-- Use specific columns instead of SELECT *\nSELECT id, name, email FROM users WHERE active = true;\n\n-- Implement pagination\nSELECT * FROM posts \nORDER BY created_at DESC \nLIMIT 20 OFFSET 40;\n```\n\n### API Response Optimization\n\n```javascript\n// Implement response compression\napp.use(compression())\n\n// Add caching headers\napp.get('/api/posts', (req, res) => {\n  res.set('Cache-Control', 'public, max-age=300') // 5 minutes\n  res.json(posts)\n})\n\n// Use GraphQL for efficient data fetching\nconst typeDefs = `\n  type Query {\n    posts(limit: Int, offset: Int): [Post]\n  }\n`\n```\n\n## Monitoring and Measurement\n\n### Performance Monitoring\n\n```javascript\n// Core Web Vitals monitoring\nfunction sendToAnalytics(metric) {\n  // Send to your analytics service\n  gtag('event', metric.name, {\n    event_category: 'Web Vitals',\n    value: Math.round(metric.value),\n    custom_map: {\n      metric_id: metric.id,\n      metric_value: metric.value,\n      metric_delta: metric.delta\n    }\n  })\n}\n\n// Measure FCP\ngetCLS(sendToAnalytics)\ngetFID(sendToAnalytics)\ngetLCP(sendToAnalytics)\n```\n\n### Performance Budget\n\n```javascript\n// webpack.config.js\nmodule.exports = {\n  performance: {\n    maxAssetSize: 250000,\n    maxEntrypointSize: 250000,\n    hints: 'error'\n  }\n}\n```\n\n## Testing Performance\n\n### Lighthouse CI\n\n```yaml\n# .github/workflows/lighthouse.yml\nname: Lighthouse CI\non: [push]\njobs:\n  lighthouse:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Run Lighthouse CI\n        uses: treosh/lighthouse-ci-action@v7\n        with:\n          configPath: '.lighthouserc.json'\n```\n\n### Load Testing\n\n```javascript\n// Using k6 for load testing\nimport http from 'k6/http'\nimport { check } from 'k6'\n\nexport let options = {\n  stages: [\n    { duration: '30s', target: 20 },\n    { duration: '1m', target: 20 },\n    { duration: '30s', target: 0 }\n  ]\n}\n\nexport default function() {\n  let response = http.get('https://your-site.com')\n  check(response, {\n    'status is 200': (r) => r.status === 200,\n    'response time \u003C 500ms': (r) => r.timings.duration \u003C 500\n  })\n}\n```\n\n## Performance Checklist\n\n### Before Launch\n- [ ] Optimize images (format, size, lazy loading)\n- [ ] Minimize and compress CSS/JS\n- [ ] Implement proper caching headers\n- [ ] Set up CDN for static assets\n- [ ] Add performance monitoring\n- [ ] Test on various devices and networks\n\n### Ongoing Monitoring\n- [ ] Monitor Core Web Vitals regularly\n- [ ] Set up performance alerts\n- [ ] Regular performance audits\n- [ ] User experience monitoring\n- [ ] Competitive benchmarking\n\n## Conclusion\n\nWeb performance optimization is an ongoing process that requires attention to detail and continuous monitoring. By focusing on Core Web Vitals, optimizing critical resources, and implementing proper measurement strategies, you can create web applications that not only perform well but also provide exceptional user experiences.\n\nRemember that performance is not just a technical metric—it directly impacts user satisfaction, conversion rates, and business success. Invest in performance optimization early and make it a core part of your development process.\n\nThe strategies outlined in this guide provide a solid foundation for building fast, responsive web applications. Start with the basics, measure everything, and continuously iterate based on real user data.","src/content/blog/performance-optimization.md","249b904019f341f1",{"html":195,"metadata":196},"\u003Ch1 id=\"web-performance-optimization-a-practical-guide\">Web Performance Optimization: A Practical Guide\u003C/h1>\n\u003Cp>Web performance isn’t just about making your site fast—it’s about creating exceptional user experiences that drive engagement, conversions, and business success. In this comprehensive guide, we’ll explore practical strategies for optimizing web application performance across all key metrics.\u003C/p>\n\u003Ch2 id=\"understanding-core-web-vitals\">Understanding Core Web Vitals\u003C/h2>\n\u003Cp>Core Web Vitals are the foundation of modern web performance measurement. These user-centric metrics focus on what actually matters to your users.\u003C/p>\n\u003Ch3 id=\"largest-contentful-paint-lcp\">Largest Contentful Paint (LCP)\u003C/h3>\n\u003Cp>\u003Cstrong>Target: ≤ 2.5 seconds\u003C/strong>\u003C/p>\n\u003Cp>LCP measures loading performance by tracking when the largest content element becomes visible.\u003C/p>\n\u003Cp>\u003Cstrong>Optimization strategies:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Optimize images with modern formats (WebP, AVIF)\u003C/li>\n\u003Cli>Implement proper preloading for critical resources\u003C/li>\n\u003Cli>Use CDN for faster content delivery\u003C/li>\n\u003Cli>Minimize server response times\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"first-input-delay-fid\">First Input Delay (FID)\u003C/h3>\n\u003Cp>\u003Cstrong>Target: ≤ 100 milliseconds\u003C/strong>\u003C/p>\n\u003Cp>FID measures interactivity by tracking the delay between user interaction and browser response.\u003C/p>\n\u003Cp>\u003Cstrong>Optimization strategies:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Minimize JavaScript execution time\u003C/li>\n\u003Cli>Use code splitting to reduce main thread blocking\u003C/li>\n\u003Cli>Implement service workers for better resource management\u003C/li>\n\u003Cli>Defer non-critical JavaScript\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"cumulative-layout-shift-cls\">Cumulative Layout Shift (CLS)\u003C/h3>\n\u003Cp>\u003Cstrong>Target: ≤ 0.1\u003C/strong>\u003C/p>\n\u003Cp>CLS measures visual stability by tracking unexpected layout shifts.\u003C/p>\n\u003Cp>\u003Cstrong>Optimization strategies:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Always include dimensions for images and videos\u003C/li>\n\u003Cli>Reserve space for dynamically loaded content\u003C/li>\n\u003Cli>Use CSS transforms instead of changing layout properties\u003C/li>\n\u003Cli>Ensure fonts load predictably\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"image-optimization-strategies\">Image Optimization Strategies\u003C/h2>\n\u003Cp>Images often account for the majority of page weight. Optimizing them can dramatically improve performance.\u003C/p>\n\u003Ch3 id=\"modern-image-formats\">Modern Image Formats\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">picture\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">source\u003C/span>\u003Cspan style=\"color:#B392F0\"> srcset\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"image.avif\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> type\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"image/avif\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">source\u003C/span>\u003Cspan style=\"color:#B392F0\"> srcset\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"image.webp\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> type\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"image/webp\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">img\u003C/span>\u003Cspan style=\"color:#B392F0\"> src\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"image.jpg\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> alt\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Description\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> loading\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"lazy\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">picture\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"responsive-images\">Responsive Images\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">img\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  srcset\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    image-320w.jpg 320w,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    image-640w.jpg 640w,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    image-1280w.jpg 1280w\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">  \"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  sizes\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    (max-width: 320px) 280px,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    (max-width: 640px) 600px,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    1200px\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">  \"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  src\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"image-640w.jpg\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  alt\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Description\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  loading\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"lazy\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"lazy-loading-implementation\">Lazy Loading Implementation\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Intersection Observer for lazy loading\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> imageObserver\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#B392F0\"> IntersectionObserver\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((\u003C/span>\u003Cspan style=\"color:#FFAB70\">entries\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">observer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  entries.\u003C/span>\u003Cspan style=\"color:#B392F0\">forEach\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">entry\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (entry.isIntersecting) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> img\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> entry.target\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      img.src \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> img.dataset.src\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      img.classList.\u003C/span>\u003Cspan style=\"color:#B392F0\">remove\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'lazy'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      observer.\u003C/span>\u003Cspan style=\"color:#B392F0\">unobserve\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(img)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">})\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">document.\u003C/span>\u003Cspan style=\"color:#B392F0\">querySelectorAll\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'img[data-src]'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">).\u003C/span>\u003Cspan style=\"color:#B392F0\">forEach\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">img\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  imageObserver.\u003C/span>\u003Cspan style=\"color:#B392F0\">observe\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(img)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">})\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"javascript-optimization\">JavaScript Optimization\u003C/h2>\n\u003Cp>JavaScript performance directly impacts user experience. Here are key strategies for optimization.\u003C/p>\n\u003Ch3 id=\"code-splitting\">Code Splitting\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Dynamic imports for code splitting\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> LazyComponent\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> lazy\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#F97583\"> import\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'./LazyComponent'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> App\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">Suspense\u003C/span>\u003Cspan style=\"color:#B392F0\"> fallback\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Loading...&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">LazyComponent\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">Suspense\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"bundle-analysis\">Bundle Analysis\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Analyze your bundle size\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">npm\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --save-dev\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> webpack-bundle-analyzer\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Add to package.json scripts\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">\"analyze\"\u003C/span>\u003Cspan style=\"color:#79B8FF\">:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"npm run build &#x26;&#x26; npx webpack-bundle-analyzer build/static/js/*.js\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"tree-shaking\">Tree Shaking\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Import only what you need\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { debounce } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'lodash/debounce'\u003C/span>\u003Cspan style=\"color:#6A737D\">  // Good\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _ \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'lodash'\u003C/span>\u003Cspan style=\"color:#6A737D\">  // Bad - imports entire library\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"css-performance\">CSS Performance\u003C/h2>\n\u003Cp>CSS can block rendering and impact performance. Optimize it properly.\u003C/p>\n\u003Ch3 id=\"critical-css\">Critical CSS\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">&#x3C;!-- Inline critical CSS -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">style\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  /* Critical above-the-fold styles */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  .header\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#6A737D\">/* styles */\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  .hero\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#6A737D\">/* styles */\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">style\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">&#x3C;!-- Load non-critical CSS asynchronously -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">link\u003C/span>\u003Cspan style=\"color:#B392F0\"> rel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"preload\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"styles.css\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> as\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"style\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> onload\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#79B8FF\">this\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">onload\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#9ECBFF\">;\u003C/span>\u003Cspan style=\"color:#79B8FF\">this\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">rel\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'stylesheet'\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"css-containment\">CSS Containment\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.component\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  contain\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: layout \u003C/span>\u003Cspan style=\"color:#79B8FF\">style\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> paint;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.list-item\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  contain\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: layout;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"resource-loading-optimization\">Resource Loading Optimization\u003C/h2>\n\u003Ch3 id=\"preloading-critical-resources\">Preloading Critical Resources\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">&#x3C;!-- Preload critical fonts -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">link\u003C/span>\u003Cspan style=\"color:#B392F0\"> rel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"preload\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"font.woff2\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> as\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"font\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> type\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"font/woff2\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> crossorigin\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">&#x3C;!-- Preload critical images -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">link\u003C/span>\u003Cspan style=\"color:#B392F0\"> rel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"preload\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"hero-image.jpg\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> as\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"image\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">&#x3C;!-- Prefetch likely next page resources -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">link\u003C/span>\u003Cspan style=\"color:#B392F0\"> rel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"prefetch\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/next-page.html\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"service-worker-for-caching\">Service Worker for Caching\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// sw.js\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> CACHE_NAME\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'app-cache-v1'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> STATIC_ASSETS\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">  '/'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">  '/styles.css'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">  '/app.js'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">  '/offline.html'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">self.\u003C/span>\u003Cspan style=\"color:#B392F0\">addEventListener\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'install'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">event\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  event.\u003C/span>\u003Cspan style=\"color:#B392F0\">waitUntil\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    caches.\u003C/span>\u003Cspan style=\"color:#B392F0\">open\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">CACHE_NAME\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      .\u003C/span>\u003Cspan style=\"color:#B392F0\">then\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">cache\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> cache.\u003C/span>\u003Cspan style=\"color:#B392F0\">addAll\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">STATIC_ASSETS\u003C/span>\u003Cspan style=\"color:#E1E4E8\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">})\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">self.\u003C/span>\u003Cspan style=\"color:#B392F0\">addEventListener\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'fetch'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">event\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  event.\u003C/span>\u003Cspan style=\"color:#B392F0\">respondWith\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    caches.\u003C/span>\u003Cspan style=\"color:#B392F0\">match\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(event.request)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      .\u003C/span>\u003Cspan style=\"color:#B392F0\">then\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">response\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> response \u003C/span>\u003Cspan style=\"color:#F97583\">||\u003C/span>\u003Cspan style=\"color:#B392F0\"> fetch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(event.request)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      .\u003C/span>\u003Cspan style=\"color:#B392F0\">catch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> caches.\u003C/span>\u003Cspan style=\"color:#B392F0\">match\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/offline.html'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">})\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"database-and-api-optimization\">Database and API Optimization\u003C/h2>\n\u003Cp>Backend performance is crucial for overall user experience.\u003C/p>\n\u003Ch3 id=\"database-query-optimization\">Database Query Optimization\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Add indexes for frequently queried columns\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> INDEX\u003C/span>\u003Cspan style=\"color:#B392F0\"> idx_user_email\u003C/span>\u003Cspan style=\"color:#F97583\"> ON\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users(email);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Use specific columns instead of SELECT *\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> id, \u003C/span>\u003Cspan style=\"color:#F97583\">name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, email \u003C/span>\u003Cspan style=\"color:#F97583\">FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> active \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> true;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Implement pagination\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> posts \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">ORDER BY\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> created_at \u003C/span>\u003Cspan style=\"color:#F97583\">DESC\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">LIMIT\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 20\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> OFFSET \u003C/span>\u003Cspan style=\"color:#79B8FF\">40\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"api-response-optimization\">API Response Optimization\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Implement response compression\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">app.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">compression\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Add caching headers\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">app.\u003C/span>\u003Cspan style=\"color:#B392F0\">get\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/api/posts'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, (\u003C/span>\u003Cspan style=\"color:#FFAB70\">req\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">res\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  res.\u003C/span>\u003Cspan style=\"color:#B392F0\">set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Cache-Control'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'public, max-age=300'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#6A737D\">// 5 minutes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  res.\u003C/span>\u003Cspan style=\"color:#B392F0\">json\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(posts)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">})\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Use GraphQL for efficient data fetching\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> typeDefs\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> `\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">  type Query {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    posts(limit: Int, offset: Int): [Post]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">`\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"monitoring-and-measurement\">Monitoring and Measurement\u003C/h2>\n\u003Ch3 id=\"performance-monitoring\">Performance Monitoring\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Core Web Vitals monitoring\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> sendToAnalytics\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">metric\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // Send to your analytics service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  gtag\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'event'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, metric.name, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    event_category: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Web Vitals'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    value: Math.\u003C/span>\u003Cspan style=\"color:#B392F0\">round\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(metric.value),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    custom_map: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      metric_id: metric.id,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      metric_value: metric.value,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      metric_delta: metric.delta\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Measure FCP\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">getCLS\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(sendToAnalytics)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">getFID\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(sendToAnalytics)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">getLCP\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(sendToAnalytics)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"performance-budget\">Performance Budget\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// webpack.config.js\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">module\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#79B8FF\">exports\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  performance: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    maxAssetSize: \u003C/span>\u003Cspan style=\"color:#79B8FF\">250000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    maxEntrypointSize: \u003C/span>\u003Cspan style=\"color:#79B8FF\">250000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    hints: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'error'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"testing-performance\">Testing Performance\u003C/h2>\n\u003Ch3 id=\"lighthouse-ci\">Lighthouse CI\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"yaml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># .github/workflows/lighthouse.yml\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">Lighthouse CI\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">on\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">push\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">jobs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  lighthouse\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">    runs-on\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">ubuntu-latest\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">    steps\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      - \u003C/span>\u003Cspan style=\"color:#85E89D\">uses\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">actions/checkout@v2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      - \u003C/span>\u003Cspan style=\"color:#85E89D\">name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">Run Lighthouse CI\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">        uses\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">treosh/lighthouse-ci-action@v7\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">        with\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">          configPath\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'.lighthouserc.json'\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"load-testing\">Load Testing\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Using k6 for load testing\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> http \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'k6/http'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { check } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'k6'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#F97583\"> let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> options \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  stages: [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    { duration: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'30s'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, target: \u003C/span>\u003Cspan style=\"color:#79B8FF\">20\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    { duration: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'1m'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, target: \u003C/span>\u003Cspan style=\"color:#79B8FF\">20\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    { duration: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'30s'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, target: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  ]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#F97583\"> default\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> response \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> http.\u003C/span>\u003Cspan style=\"color:#B392F0\">get\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'https://your-site.com'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  check\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(response, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    'status is 200'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: (\u003C/span>\u003Cspan style=\"color:#FFAB70\">r\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> r.status \u003C/span>\u003Cspan style=\"color:#F97583\">===\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 200\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    'response time &#x3C; 500ms'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: (\u003C/span>\u003Cspan style=\"color:#FFAB70\">r\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> r.timings.duration \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 500\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"performance-checklist\">Performance Checklist\u003C/h2>\n\u003Ch3 id=\"before-launch\">Before Launch\u003C/h3>\n\u003Cul class=\"contains-task-list\">\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Optimize images (format, size, lazy loading)\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Minimize and compress CSS/JS\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Implement proper caching headers\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Set up CDN for static assets\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Add performance monitoring\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Test on various devices and networks\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"ongoing-monitoring\">Ongoing Monitoring\u003C/h3>\n\u003Cul class=\"contains-task-list\">\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Monitor Core Web Vitals regularly\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Set up performance alerts\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Regular performance audits\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> User experience monitoring\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Competitive benchmarking\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>Web performance optimization is an ongoing process that requires attention to detail and continuous monitoring. By focusing on Core Web Vitals, optimizing critical resources, and implementing proper measurement strategies, you can create web applications that not only perform well but also provide exceptional user experiences.\u003C/p>\n\u003Cp>Remember that performance is not just a technical metric—it directly impacts user satisfaction, conversion rates, and business success. Invest in performance optimization early and make it a core part of your development process.\u003C/p>\n\u003Cp>The strategies outlined in this guide provide a solid foundation for building fast, responsive web applications. Start with the basics, measure everything, and continuously iterate based on real user data.\u003C/p>",{"headings":197,"localImagePaths":291,"remoteImagePaths":292,"frontmatter":293,"imagePaths":296},[198,200,203,206,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266,269,272,275,278,281,284,287,290],{"depth":32,"slug":199,"text":183},"web-performance-optimization-a-practical-guide",{"depth":35,"slug":201,"text":202},"understanding-core-web-vitals","Understanding Core Web Vitals",{"depth":39,"slug":204,"text":205},"largest-contentful-paint-lcp","Largest Contentful Paint (LCP)",{"depth":39,"slug":207,"text":208},"first-input-delay-fid","First Input Delay (FID)",{"depth":39,"slug":210,"text":211},"cumulative-layout-shift-cls","Cumulative Layout Shift (CLS)",{"depth":35,"slug":213,"text":214},"image-optimization-strategies","Image Optimization Strategies",{"depth":39,"slug":216,"text":217},"modern-image-formats","Modern Image Formats",{"depth":39,"slug":219,"text":220},"responsive-images","Responsive Images",{"depth":39,"slug":222,"text":223},"lazy-loading-implementation","Lazy Loading Implementation",{"depth":35,"slug":225,"text":226},"javascript-optimization","JavaScript Optimization",{"depth":39,"slug":228,"text":229},"code-splitting","Code Splitting",{"depth":39,"slug":231,"text":232},"bundle-analysis","Bundle Analysis",{"depth":39,"slug":234,"text":235},"tree-shaking","Tree Shaking",{"depth":35,"slug":237,"text":238},"css-performance","CSS Performance",{"depth":39,"slug":240,"text":241},"critical-css","Critical CSS",{"depth":39,"slug":243,"text":244},"css-containment","CSS Containment",{"depth":35,"slug":246,"text":247},"resource-loading-optimization","Resource Loading Optimization",{"depth":39,"slug":249,"text":250},"preloading-critical-resources","Preloading Critical Resources",{"depth":39,"slug":252,"text":253},"service-worker-for-caching","Service Worker for Caching",{"depth":35,"slug":255,"text":256},"database-and-api-optimization","Database and API Optimization",{"depth":39,"slug":258,"text":259},"database-query-optimization","Database Query Optimization",{"depth":39,"slug":261,"text":262},"api-response-optimization","API Response Optimization",{"depth":35,"slug":264,"text":265},"monitoring-and-measurement","Monitoring and Measurement",{"depth":39,"slug":267,"text":268},"performance-monitoring","Performance Monitoring",{"depth":39,"slug":270,"text":271},"performance-budget","Performance Budget",{"depth":35,"slug":273,"text":274},"testing-performance","Testing Performance",{"depth":39,"slug":276,"text":277},"lighthouse-ci","Lighthouse CI",{"depth":39,"slug":279,"text":280},"load-testing","Load Testing",{"depth":35,"slug":282,"text":283},"performance-checklist","Performance Checklist",{"depth":39,"slug":285,"text":286},"before-launch","Before Launch",{"depth":39,"slug":288,"text":289},"ongoing-monitoring","Ongoing Monitoring",{"depth":35,"slug":85,"text":86},[],[],{"title":183,"description":184,"pubDate":294,"tags":295,"readingTime":190},["Date","2024-01-05T00:00:00.000Z"],[187,188,189],[],"performance-optimization.md","microservices-lessons",{"id":298,"data":300,"body":309,"filePath":310,"digest":311,"rendered":312,"legacyId":412},{"title":301,"description":302,"pubDate":303,"tags":304,"draft":21,"author":22,"readingTime":308},"Microservices: Lessons from the Trenches","Real-world experiences and lessons learned from implementing microservices architecture at scale.",["Date","2023-12-28T00:00:00.000Z"],[305,306,307],"microservices","architecture","distributed-systems","7 min read","# Microservices: Lessons from the Trenches\n\nAfter several years of building and maintaining microservices architectures across different organizations, I've learned that the journey from monolith to microservices is rarely straightforward. Here are the real-world lessons, hard-won insights, and practical advice from implementing microservices at scale.\n\n## When Microservices Make Sense (And When They Don't)\n\n### The Right Time for Microservices\n\nMicroservices aren't a silver bullet. They solve specific problems and create others. Consider microservices when:\n\n- **Team scaling**: You have multiple teams working on the same codebase and coordination overhead is slowing development\n- **Technology diversity**: Different parts of your system have fundamentally different technical requirements\n- **Independent scaling**: Different components have vastly different scaling needs\n- **Organizational boundaries**: Conway's Law suggests your architecture will mirror your organization structure\n\n### When to Stick with the Monolith\n\nStay monolithic when:\n\n- **Small teams**: You have fewer than 8-10 engineers\n- **Uncertain domain boundaries**: You're still figuring out your business domain\n- **Simple use cases**: Your application doesn't have complex scaling or technology requirements\n- **Limited operational expertise**: You don't have the DevOps maturity to handle distributed systems\n\n## The Migration Strategy That Actually Works\n\n### Start with the Database\n\nMost \"microservices\" projects fail because they split the application but keep a shared database. This creates distributed monoliths that have all the complexity of microservices with none of the benefits.\n\n```sql\n-- Wrong: Shared database with foreign key constraints across services\nCREATE TABLE users (id, name, email);\nCREATE TABLE orders (id, user_id REFERENCES users(id), amount);\n\n-- Right: Each service owns its data\n-- User Service Database\nCREATE TABLE users (id, name, email);\n\n-- Order Service Database  \nCREATE TABLE orders (id, user_id, amount); -- No foreign key!\n```\n\n### Strangler Fig Pattern\n\nGradually migrate functionality rather than attempting a big-bang rewrite:\n\n```javascript\n// API Gateway routing during migration\nconst routes = [\n  {\n    path: '/api/users/*',\n    service: 'user-service' // New microservice\n  },\n  {\n    path: '/api/orders/*', \n    service: 'order-service' // New microservice\n  },\n  {\n    path: '/api/*',\n    service: 'legacy-monolith' // Everything else\n  }\n]\n```\n\n### Extract Services Based on Business Capabilities\n\nDon't split along technical lines. Split along business capabilities:\n\n```\n❌ Bad: Technical splitting\n- Database Service\n- API Service  \n- UI Service\n\n✅ Good: Business capability splitting\n- User Management Service\n- Order Processing Service\n- Inventory Service\n- Notification Service\n```\n\n## Communication Patterns That Scale\n\n### Synchronous vs Asynchronous\n\nChoose your communication pattern carefully:\n\n**Synchronous (HTTP/gRPC)** for:\n- Real-time queries\n- Simple request-response patterns\n- When you need immediate consistency\n\n**Asynchronous (Message queues)** for:\n- Event-driven workflows\n- Eventual consistency scenarios\n- High-throughput scenarios\n\n### Event-Driven Architecture\n\nImplement event sourcing for complex workflows:\n\n```javascript\n// Order Service publishes events\nclass OrderService {\n  async createOrder(orderData) {\n    const order = await this.repository.save(orderData)\n    \n    // Publish event for other services\n    await this.eventBus.publish('order.created', {\n      orderId: order.id,\n      userId: order.userId,\n      amount: order.amount,\n      timestamp: new Date()\n    })\n    \n    return order\n  }\n}\n\n// Inventory Service reacts to events\nclass InventoryService {\n  async handleOrderCreated(event) {\n    await this.reserveItems(event.orderId, event.items)\n    \n    await this.eventBus.publish('inventory.reserved', {\n      orderId: event.orderId,\n      items: event.items\n    })\n  }\n}\n```\n\n### Circuit Breaker Pattern\n\nImplement circuit breakers to prevent cascade failures:\n\n```javascript\nclass CircuitBreaker {\n  constructor(threshold = 5, timeout = 60000) {\n    this.threshold = threshold\n    this.timeout = timeout\n    this.failureCount = 0\n    this.state = 'CLOSED' // CLOSED, OPEN, HALF_OPEN\n    this.nextAttempt = Date.now()\n  }\n  \n  async call(fn) {\n    if (this.state === 'OPEN') {\n      if (Date.now() \u003C this.nextAttempt) {\n        throw new Error('Circuit breaker is OPEN')\n      }\n      this.state = 'HALF_OPEN'\n    }\n    \n    try {\n      const result = await fn()\n      this.onSuccess()\n      return result\n    } catch (error) {\n      this.onFailure()\n      throw error\n    }\n  }\n  \n  onSuccess() {\n    this.failureCount = 0\n    this.state = 'CLOSED'\n  }\n  \n  onFailure() {\n    this.failureCount++\n    if (this.failureCount >= this.threshold) {\n      this.state = 'OPEN'\n      this.nextAttempt = Date.now() + this.timeout\n    }\n  }\n}\n```\n\n## Data Management Challenges\n\n### Distributed Transactions\n\nAvoid distributed transactions. Use the Saga pattern instead:\n\n```javascript\n// Order processing saga\nclass OrderSaga {\n  async execute(orderData) {\n    const compensations = []\n    \n    try {\n      // Step 1: Reserve inventory\n      const reservation = await this.inventoryService.reserve(orderData.items)\n      compensations.push(() => this.inventoryService.release(reservation.id))\n      \n      // Step 2: Process payment\n      const payment = await this.paymentService.charge(orderData.payment)\n      compensations.push(() => this.paymentService.refund(payment.id))\n      \n      // Step 3: Create order\n      const order = await this.orderService.create(orderData)\n      \n      return order\n    } catch (error) {\n      // Execute compensations in reverse order\n      for (const compensation of compensations.reverse()) {\n        try {\n          await compensation()\n        } catch (compensationError) {\n          console.error('Compensation failed:', compensationError)\n        }\n      }\n      throw error\n    }\n  }\n}\n```\n\n### Data Consistency Strategies\n\n**Eventual Consistency**: Accept that data won't always be immediately consistent across services.\n\n```javascript\n// Event-driven eventual consistency\nclass UserService {\n  async updateUser(userId, userData) {\n    const user = await this.repository.update(userId, userData)\n    \n    // Other services will eventually sync\n    await this.eventBus.publish('user.updated', {\n      userId: user.id,\n      email: user.email,\n      name: user.name\n    })\n    \n    return user\n  }\n}\n\nclass OrderService {\n  async handleUserUpdated(event) {\n    // Update local user cache\n    await this.userCache.update(event.userId, {\n      email: event.email,\n      name: event.name\n    })\n  }\n}\n```\n\n## Operational Complexity\n\n### Observability is Critical\n\nYou can't manage what you can't see. Implement comprehensive observability:\n\n```javascript\n// Distributed tracing\nconst opentelemetry = require('@opentelemetry/api')\n\nclass UserService {\n  async getUser(userId) {\n    const span = opentelemetry.trace.getActiveSpan()\n    span?.setAttributes({\n      'user.id': userId,\n      'service.name': 'user-service'\n    })\n    \n    try {\n      const user = await this.repository.findById(userId)\n      span?.setStatus({ code: opentelemetry.SpanStatusCode.OK })\n      return user\n    } catch (error) {\n      span?.setStatus({ \n        code: opentelemetry.SpanStatusCode.ERROR,\n        message: error.message \n      })\n      throw error\n    }\n  }\n}\n```\n\n### Service Mesh for Cross-Cutting Concerns\n\nUse service mesh (Istio, Linkerd) for:\n- Service-to-service authentication\n- Traffic management\n- Observability\n- Security policies\n\n```yaml\n# Istio virtual service for canary deployment\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: order-service\nspec:\n  hosts:\n  - order-service\n  http:\n  - match:\n    - headers:\n        canary:\n          exact: \"true\"\n    route:\n    - destination:\n        host: order-service\n        subset: v2\n  - route:\n    - destination:\n        host: order-service\n        subset: v1\n      weight: 90\n    - destination:\n        host: order-service\n        subset: v2\n      weight: 10\n```\n\n## Deployment and DevOps\n\n### CI/CD Per Service\n\nEach service should have its own deployment pipeline:\n\n```yaml\n# .github/workflows/user-service.yml\nname: User Service CI/CD\non:\n  push:\n    paths:\n      - 'services/user-service/**'\n      \njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Run tests\n        run: |\n          cd services/user-service\n          npm test\n          \n  deploy:\n    needs: test\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to Kubernetes\n        run: |\n          kubectl apply -f services/user-service/k8s/\n```\n\n### Database Migrations\n\nHandle database migrations carefully in microservices:\n\n```javascript\n// Backward-compatible migrations\n// Phase 1: Add new column (optional)\nALTER TABLE users ADD COLUMN phone_number VARCHAR(20);\n\n// Phase 2: Deploy application code that writes to both columns\n\n// Phase 3: Migrate existing data\nUPDATE users SET phone_number = legacy_phone WHERE phone_number IS NULL;\n\n// Phase 4: Make new column required\nALTER TABLE users ALTER COLUMN phone_number SET NOT NULL;\n\n// Phase 5: Remove old column\nALTER TABLE users DROP COLUMN legacy_phone;\n```\n\n## Testing Strategies\n\n### Contract Testing\n\nUse contract testing to ensure service compatibility:\n\n```javascript\n// User service contract\nconst userServiceContract = {\n  request: {\n    method: 'GET',\n    path: '/users/123'\n  },\n  response: {\n    status: 200,\n    body: {\n      id: '123',\n      name: 'John Doe',\n      email: 'john@example.com'\n    }\n  }\n}\n\n// Order service consumer test\ndescribe('User Service Integration', () => {\n  it('should get user details', async () => {\n    // Mock based on contract\n    nock('http://user-service')\n      .get('/users/123')\n      .reply(200, userServiceContract.response.body)\n      \n    const user = await userClient.getUser('123')\n    expect(user.name).toBe('John Doe')\n  })\n})\n```\n\n### Integration Testing\n\nTest service interactions with test containers:\n\n```javascript\n// Integration test with real dependencies\ndescribe('Order Service Integration', () => {\n  let postgres, redis, userService\n  \n  beforeAll(async () => {\n    postgres = await new PostgreSqlContainer().start()\n    redis = await new RedisContainer().start()\n    userService = await new GenericContainer('user-service').start()\n  })\n  \n  afterAll(async () => {\n    await postgres.stop()\n    await redis.stop()\n    await userService.stop()\n  })\n  \n  it('should create order with user validation', async () => {\n    // Test with real dependencies\n  })\n})\n```\n\n## Common Pitfalls and How to Avoid Them\n\n### 1. Distributed Monolith\n\n**Problem**: Services that are too tightly coupled\n\n**Solution**: Design for independence. Each service should be deployable separately.\n\n### 2. Premature Optimization\n\n**Problem**: Starting with microservices from day one\n\n**Solution**: Start with a modular monolith, extract services when needed.\n\n### 3. Shared Databases\n\n**Problem**: Services sharing the same database\n\n**Solution**: Database per service. Use events for data synchronization.\n\n### 4. Synchronous Everything\n\n**Problem**: Using HTTP for all service communication\n\n**Solution**: Use async messaging for non-critical paths.\n\n### 5. Ignoring Network Partitions\n\n**Problem**: Not handling network failures gracefully\n\n**Solution**: Implement circuit breakers, timeouts, and bulkheads.\n\n## Conclusion\n\nMicroservices can solve real problems, but they're not free. They trade code complexity for operational complexity. Before adopting microservices, ensure you have:\n\n1. **Clear business justification**: Teams, scaling, or technology diversity needs\n2. **Operational maturity**: DevOps capabilities, monitoring, and automation\n3. **Domain understanding**: Clear service boundaries based on business capabilities\n4. **Gradual migration plan**: Strangler fig pattern rather than big-bang rewrite\n\nRemember: a well-designed monolith is better than a poorly designed microservices architecture. Start simple, and evolve when you have clear evidence that microservices will solve your specific problems.\n\nThe goal isn't to build microservices—it's to build systems that enable your teams to deliver value quickly and reliably. Sometimes that's a monolith, sometimes it's microservices, and often it's something in between.","src/content/blog/microservices-lessons.md","3c1d5bc5a6348740",{"html":313,"metadata":314},"\u003Ch1 id=\"microservices-lessons-from-the-trenches\">Microservices: Lessons from the Trenches\u003C/h1>\n\u003Cp>After several years of building and maintaining microservices architectures across different organizations, I’ve learned that the journey from monolith to microservices is rarely straightforward. Here are the real-world lessons, hard-won insights, and practical advice from implementing microservices at scale.\u003C/p>\n\u003Ch2 id=\"when-microservices-make-sense-and-when-they-dont\">When Microservices Make Sense (And When They Don’t)\u003C/h2>\n\u003Ch3 id=\"the-right-time-for-microservices\">The Right Time for Microservices\u003C/h3>\n\u003Cp>Microservices aren’t a silver bullet. They solve specific problems and create others. Consider microservices when:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Team scaling\u003C/strong>: You have multiple teams working on the same codebase and coordination overhead is slowing development\u003C/li>\n\u003Cli>\u003Cstrong>Technology diversity\u003C/strong>: Different parts of your system have fundamentally different technical requirements\u003C/li>\n\u003Cli>\u003Cstrong>Independent scaling\u003C/strong>: Different components have vastly different scaling needs\u003C/li>\n\u003Cli>\u003Cstrong>Organizational boundaries\u003C/strong>: Conway’s Law suggests your architecture will mirror your organization structure\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"when-to-stick-with-the-monolith\">When to Stick with the Monolith\u003C/h3>\n\u003Cp>Stay monolithic when:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Small teams\u003C/strong>: You have fewer than 8-10 engineers\u003C/li>\n\u003Cli>\u003Cstrong>Uncertain domain boundaries\u003C/strong>: You’re still figuring out your business domain\u003C/li>\n\u003Cli>\u003Cstrong>Simple use cases\u003C/strong>: Your application doesn’t have complex scaling or technology requirements\u003C/li>\n\u003Cli>\u003Cstrong>Limited operational expertise\u003C/strong>: You don’t have the DevOps maturity to handle distributed systems\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"the-migration-strategy-that-actually-works\">The Migration Strategy That Actually Works\u003C/h2>\n\u003Ch3 id=\"start-with-the-database\">Start with the Database\u003C/h3>\n\u003Cp>Most “microservices” projects fail because they split the application but keep a shared database. This creates distributed monoliths that have all the complexity of microservices with none of the benefits.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Wrong: Shared database with foreign key constraints across services\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> users\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (id, \u003C/span>\u003Cspan style=\"color:#F97583\">name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, email);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> orders\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (id, user_id \u003C/span>\u003Cspan style=\"color:#F97583\">REFERENCES\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users(id), amount);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Right: Each service owns its data\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- User Service Database\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> users\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (id, \u003C/span>\u003Cspan style=\"color:#F97583\">name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, email);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">-- Order Service Database  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">CREATE\u003C/span>\u003Cspan style=\"color:#F97583\"> TABLE\u003C/span>\u003Cspan style=\"color:#B392F0\"> orders\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (id, user_id, amount); \u003C/span>\u003Cspan style=\"color:#6A737D\">-- No foreign key!\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"strangler-fig-pattern\">Strangler Fig Pattern\u003C/h3>\n\u003Cp>Gradually migrate functionality rather than attempting a big-bang rewrite:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// API Gateway routing during migration\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> routes\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    path: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/api/users/*'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    service: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'user-service'\u003C/span>\u003Cspan style=\"color:#6A737D\"> // New microservice\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    path: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/api/orders/*'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    service: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'order-service'\u003C/span>\u003Cspan style=\"color:#6A737D\"> // New microservice\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    path: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/api/*'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    service: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'legacy-monolith'\u003C/span>\u003Cspan style=\"color:#6A737D\"> // Everything else\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"extract-services-based-on-business-capabilities\">Extract Services Based on Business Capabilities\u003C/h3>\n\u003Cp>Don’t split along technical lines. Split along business capabilities:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>❌ Bad: Technical splitting\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>- Database Service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>- API Service  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>- UI Service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>✅ Good: Business capability splitting\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>- User Management Service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>- Order Processing Service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>- Inventory Service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>- Notification Service\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"communication-patterns-that-scale\">Communication Patterns That Scale\u003C/h2>\n\u003Ch3 id=\"synchronous-vs-asynchronous\">Synchronous vs Asynchronous\u003C/h3>\n\u003Cp>Choose your communication pattern carefully:\u003C/p>\n\u003Cp>\u003Cstrong>Synchronous (HTTP/gRPC)\u003C/strong> for:\u003C/p>\n\u003Cul>\n\u003Cli>Real-time queries\u003C/li>\n\u003Cli>Simple request-response patterns\u003C/li>\n\u003Cli>When you need immediate consistency\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Asynchronous (Message queues)\u003C/strong> for:\u003C/p>\n\u003Cul>\n\u003Cli>Event-driven workflows\u003C/li>\n\u003Cli>Eventual consistency scenarios\u003C/li>\n\u003Cli>High-throughput scenarios\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"event-driven-architecture\">Event-Driven Architecture\u003C/h3>\n\u003Cp>Implement event sourcing for complex workflows:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Order Service publishes events\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> OrderService\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  async\u003C/span>\u003Cspan style=\"color:#B392F0\"> createOrder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">orderData\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> order\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.repository.\u003C/span>\u003Cspan style=\"color:#B392F0\">save\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(orderData)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Publish event for other services\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    await\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.eventBus.\u003C/span>\u003Cspan style=\"color:#B392F0\">publish\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'order.created'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      orderId: order.id,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      userId: order.userId,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      amount: order.amount,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      timestamp: \u003C/span>\u003Cspan style=\"color:#F97583\">new\u003C/span>\u003Cspan style=\"color:#B392F0\"> Date\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> order\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Inventory Service reacts to events\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> InventoryService\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  async\u003C/span>\u003Cspan style=\"color:#B392F0\"> handleOrderCreated\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">event\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    await\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">reserveItems\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(event.orderId, event.items)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    await\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.eventBus.\u003C/span>\u003Cspan style=\"color:#B392F0\">publish\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'inventory.reserved'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      orderId: event.orderId,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      items: event.items\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"circuit-breaker-pattern\">Circuit Breaker Pattern\u003C/h3>\n\u003Cp>Implement circuit breakers to prevent cascade failures:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> CircuitBreaker\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  constructor\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">threshold\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">timeout\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 60000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.threshold \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> threshold\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.timeout \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> timeout\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.failureCount \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'CLOSED'\u003C/span>\u003Cspan style=\"color:#6A737D\"> // CLOSED, OPEN, HALF_OPEN\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.nextAttempt \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Date.\u003C/span>\u003Cspan style=\"color:#B392F0\">now\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  async\u003C/span>\u003Cspan style=\"color:#B392F0\"> call\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">fn\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#79B8FF\">this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.state \u003C/span>\u003Cspan style=\"color:#F97583\">===\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'OPEN'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (Date.\u003C/span>\u003Cspan style=\"color:#B392F0\">now\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.nextAttempt) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        throw\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#B392F0\"> Error\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Circuit breaker is OPEN'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'HALF_OPEN'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    try\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> result\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#B392F0\"> fn\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">onSuccess\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    } \u003C/span>\u003Cspan style=\"color:#F97583\">catch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">onFailure\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      throw\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> error\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  onSuccess\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.failureCount \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'CLOSED'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  onFailure\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.failureCount\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#79B8FF\">this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.failureCount \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.threshold) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'OPEN'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.nextAttempt \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Date.\u003C/span>\u003Cspan style=\"color:#B392F0\">now\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.timeout\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"data-management-challenges\">Data Management Challenges\u003C/h2>\n\u003Ch3 id=\"distributed-transactions\">Distributed Transactions\u003C/h3>\n\u003Cp>Avoid distributed transactions. Use the Saga pattern instead:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Order processing saga\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> OrderSaga\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  async\u003C/span>\u003Cspan style=\"color:#B392F0\"> execute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">orderData\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> compensations\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> []\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    try\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">      // Step 1: Reserve inventory\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> reservation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.inventoryService.\u003C/span>\u003Cspan style=\"color:#B392F0\">reserve\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(orderData.items)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      compensations.\u003C/span>\u003Cspan style=\"color:#B392F0\">push\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.inventoryService.\u003C/span>\u003Cspan style=\"color:#B392F0\">release\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(reservation.id))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">      // Step 2: Process payment\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> payment\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.paymentService.\u003C/span>\u003Cspan style=\"color:#B392F0\">charge\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(orderData.payment)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      compensations.\u003C/span>\u003Cspan style=\"color:#B392F0\">push\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.paymentService.\u003C/span>\u003Cspan style=\"color:#B392F0\">refund\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(payment.id))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">      // Step 3: Create order\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> order\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.orderService.\u003C/span>\u003Cspan style=\"color:#B392F0\">create\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(orderData)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> order\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    } \u003C/span>\u003Cspan style=\"color:#F97583\">catch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">      // Execute compensations in reverse order\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> compensation\u003C/span>\u003Cspan style=\"color:#F97583\"> of\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> compensations.\u003C/span>\u003Cspan style=\"color:#B392F0\">reverse\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        try\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">          await\u003C/span>\u003Cspan style=\"color:#B392F0\"> compensation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        } \u003C/span>\u003Cspan style=\"color:#F97583\">catch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (compensationError) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          console.\u003C/span>\u003Cspan style=\"color:#B392F0\">error\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Compensation failed:'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, compensationError)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      throw\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> error\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"data-consistency-strategies\">Data Consistency Strategies\u003C/h3>\n\u003Cp>\u003Cstrong>Eventual Consistency\u003C/strong>: Accept that data won’t always be immediately consistent across services.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Event-driven eventual consistency\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> UserService\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  async\u003C/span>\u003Cspan style=\"color:#B392F0\"> updateUser\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">userId\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">userData\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> user\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.repository.\u003C/span>\u003Cspan style=\"color:#B392F0\">update\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(userId, userData)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Other services will eventually sync\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    await\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.eventBus.\u003C/span>\u003Cspan style=\"color:#B392F0\">publish\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'user.updated'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      userId: user.id,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      email: user.email,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      name: user.name\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> OrderService\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  async\u003C/span>\u003Cspan style=\"color:#B392F0\"> handleUserUpdated\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">event\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Update local user cache\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    await\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.userCache.\u003C/span>\u003Cspan style=\"color:#B392F0\">update\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(event.userId, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      email: event.email,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      name: event.name\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"operational-complexity\">Operational Complexity\u003C/h2>\n\u003Ch3 id=\"observability-is-critical\">Observability is Critical\u003C/h3>\n\u003Cp>You can’t manage what you can’t see. Implement comprehensive observability:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Distributed tracing\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> opentelemetry\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> require\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'@opentelemetry/api'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> UserService\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  async\u003C/span>\u003Cspan style=\"color:#B392F0\"> getUser\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">userId\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> span\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> opentelemetry.trace.\u003C/span>\u003Cspan style=\"color:#B392F0\">getActiveSpan\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    span?.\u003C/span>\u003Cspan style=\"color:#B392F0\">setAttributes\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">      'user.id'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: userId,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">      'service.name'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'user-service'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    try\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> user\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.repository.\u003C/span>\u003Cspan style=\"color:#B392F0\">findById\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(userId)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      span?.\u003C/span>\u003Cspan style=\"color:#B392F0\">setStatus\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ code: opentelemetry.SpanStatusCode.\u003C/span>\u003Cspan style=\"color:#79B8FF\">OK\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    } \u003C/span>\u003Cspan style=\"color:#F97583\">catch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      span?.\u003C/span>\u003Cspan style=\"color:#B392F0\">setStatus\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        code: opentelemetry.SpanStatusCode.\u003C/span>\u003Cspan style=\"color:#79B8FF\">ERROR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        message: error.message \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      throw\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> error\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"service-mesh-for-cross-cutting-concerns\">Service Mesh for Cross-Cutting Concerns\u003C/h3>\n\u003Cp>Use service mesh (Istio, Linkerd) for:\u003C/p>\n\u003Cul>\n\u003Cli>Service-to-service authentication\u003C/li>\n\u003Cli>Traffic management\u003C/li>\n\u003Cli>Observability\u003C/li>\n\u003Cli>Security policies\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"yaml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Istio virtual service for canary deployment\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">apiVersion\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">networking.istio.io/v1alpha3\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">kind\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">VirtualService\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">metadata\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">order-service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">spec\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  hosts\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#9ECBFF\">order-service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  http\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">match\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#85E89D\">headers\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">        canary\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">          exact\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"true\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">    route\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#85E89D\">destination\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">        host\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">order-service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">        subset\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">v2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  - \u003C/span>\u003Cspan style=\"color:#85E89D\">route\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#85E89D\">destination\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">        host\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">order-service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">        subset\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">v1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">      weight\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">90\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    - \u003C/span>\u003Cspan style=\"color:#85E89D\">destination\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">        host\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">order-service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">        subset\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">v2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">      weight\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"deployment-and-devops\">Deployment and DevOps\u003C/h2>\n\u003Ch3 id=\"cicd-per-service\">CI/CD Per Service\u003C/h3>\n\u003Cp>Each service should have its own deployment pipeline:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"yaml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># .github/workflows/user-service.yml\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">User Service CI/CD\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">on\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  push\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">    paths\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      - \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'services/user-service/**'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">jobs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  test\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">    runs-on\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">ubuntu-latest\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">    steps\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      - \u003C/span>\u003Cspan style=\"color:#85E89D\">uses\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">actions/checkout@v2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      - \u003C/span>\u003Cspan style=\"color:#85E89D\">name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">Run tests\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">        run\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#F97583\">|\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">          cd services/user-service\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">          npm test\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">          \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  deploy\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">    needs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">test\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">    runs-on\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">ubuntu-latest\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">    steps\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      - \u003C/span>\u003Cspan style=\"color:#85E89D\">name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">Deploy to Kubernetes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">        run\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#F97583\">|\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">          kubectl apply -f services/user-service/k8s/\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"database-migrations\">Database Migrations\u003C/h3>\n\u003Cp>Handle database migrations carefully in microservices:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Backward-compatible migrations\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Phase 1: Add new column (optional)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">ALTER\u003C/span>\u003Cspan style=\"color:#79B8FF\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#79B8FF\">ADD\u003C/span>\u003Cspan style=\"color:#79B8FF\"> COLUMN\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> phone_number \u003C/span>\u003Cspan style=\"color:#B392F0\">VARCHAR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">20\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Phase 2: Deploy application code that writes to both columns\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Phase 3: Migrate existing data\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">UPDATE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#79B8FF\">SET\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> phone_number \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> legacy_phone \u003C/span>\u003Cspan style=\"color:#79B8FF\">WHERE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> phone_number \u003C/span>\u003Cspan style=\"color:#79B8FF\">IS\u003C/span>\u003Cspan style=\"color:#79B8FF\"> NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Phase 4: Make new column required\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">ALTER\u003C/span>\u003Cspan style=\"color:#79B8FF\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#79B8FF\">ALTER\u003C/span>\u003Cspan style=\"color:#79B8FF\"> COLUMN\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> phone_number \u003C/span>\u003Cspan style=\"color:#79B8FF\">SET\u003C/span>\u003Cspan style=\"color:#79B8FF\"> NOT\u003C/span>\u003Cspan style=\"color:#79B8FF\"> NULL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Phase 5: Remove old column\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">ALTER\u003C/span>\u003Cspan style=\"color:#79B8FF\"> TABLE\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users \u003C/span>\u003Cspan style=\"color:#79B8FF\">DROP\u003C/span>\u003Cspan style=\"color:#79B8FF\"> COLUMN\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> legacy_phone;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"testing-strategies\">Testing Strategies\u003C/h2>\n\u003Ch3 id=\"contract-testing\">Contract Testing\u003C/h3>\n\u003Cp>Use contract testing to ensure service compatibility:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// User service contract\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> userServiceContract\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  request: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    method: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'GET'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    path: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/users/123'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  response: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    status: \u003C/span>\u003Cspan style=\"color:#79B8FF\">200\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    body: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      id: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'123'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      name: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'John Doe'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      email: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'john@example.com'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Order service consumer test\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">describe\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'User Service Integration'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  it\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'should get user details'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">async\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Mock based on contract\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    nock\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'http://user-service'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      .\u003C/span>\u003Cspan style=\"color:#B392F0\">get\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/users/123'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      .\u003C/span>\u003Cspan style=\"color:#B392F0\">reply\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">200\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, userServiceContract.response.body)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> user\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> userClient.\u003C/span>\u003Cspan style=\"color:#B392F0\">getUser\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'123'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    expect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(user.name).\u003C/span>\u003Cspan style=\"color:#B392F0\">toBe\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'John Doe'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">})\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"integration-testing\">Integration Testing\u003C/h3>\n\u003Cp>Test service interactions with test containers:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Integration test with real dependencies\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">describe\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Order Service Integration'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> postgres, redis, userService\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  beforeAll\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">async\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    postgres \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#B392F0\"> PostgreSqlContainer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">().\u003C/span>\u003Cspan style=\"color:#B392F0\">start\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    redis \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#B392F0\"> RedisContainer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">().\u003C/span>\u003Cspan style=\"color:#B392F0\">start\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    userService \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> await\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#B392F0\"> GenericContainer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'user-service'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">).\u003C/span>\u003Cspan style=\"color:#B392F0\">start\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  afterAll\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">async\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    await\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> postgres.\u003C/span>\u003Cspan style=\"color:#B392F0\">stop\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    await\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> redis.\u003C/span>\u003Cspan style=\"color:#B392F0\">stop\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    await\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> userService.\u003C/span>\u003Cspan style=\"color:#B392F0\">stop\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  it\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'should create order with user validation'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#F97583\">async\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Test with real dependencies\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">})\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"common-pitfalls-and-how-to-avoid-them\">Common Pitfalls and How to Avoid Them\u003C/h2>\n\u003Ch3 id=\"1-distributed-monolith\">1. Distributed Monolith\u003C/h3>\n\u003Cp>\u003Cstrong>Problem\u003C/strong>: Services that are too tightly coupled\u003C/p>\n\u003Cp>\u003Cstrong>Solution\u003C/strong>: Design for independence. Each service should be deployable separately.\u003C/p>\n\u003Ch3 id=\"2-premature-optimization\">2. Premature Optimization\u003C/h3>\n\u003Cp>\u003Cstrong>Problem\u003C/strong>: Starting with microservices from day one\u003C/p>\n\u003Cp>\u003Cstrong>Solution\u003C/strong>: Start with a modular monolith, extract services when needed.\u003C/p>\n\u003Ch3 id=\"3-shared-databases\">3. Shared Databases\u003C/h3>\n\u003Cp>\u003Cstrong>Problem\u003C/strong>: Services sharing the same database\u003C/p>\n\u003Cp>\u003Cstrong>Solution\u003C/strong>: Database per service. Use events for data synchronization.\u003C/p>\n\u003Ch3 id=\"4-synchronous-everything\">4. Synchronous Everything\u003C/h3>\n\u003Cp>\u003Cstrong>Problem\u003C/strong>: Using HTTP for all service communication\u003C/p>\n\u003Cp>\u003Cstrong>Solution\u003C/strong>: Use async messaging for non-critical paths.\u003C/p>\n\u003Ch3 id=\"5-ignoring-network-partitions\">5. Ignoring Network Partitions\u003C/h3>\n\u003Cp>\u003Cstrong>Problem\u003C/strong>: Not handling network failures gracefully\u003C/p>\n\u003Cp>\u003Cstrong>Solution\u003C/strong>: Implement circuit breakers, timeouts, and bulkheads.\u003C/p>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>Microservices can solve real problems, but they’re not free. They trade code complexity for operational complexity. Before adopting microservices, ensure you have:\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>Clear business justification\u003C/strong>: Teams, scaling, or technology diversity needs\u003C/li>\n\u003Cli>\u003Cstrong>Operational maturity\u003C/strong>: DevOps capabilities, monitoring, and automation\u003C/li>\n\u003Cli>\u003Cstrong>Domain understanding\u003C/strong>: Clear service boundaries based on business capabilities\u003C/li>\n\u003Cli>\u003Cstrong>Gradual migration plan\u003C/strong>: Strangler fig pattern rather than big-bang rewrite\u003C/li>\n\u003C/ol>\n\u003Cp>Remember: a well-designed monolith is better than a poorly designed microservices architecture. Start simple, and evolve when you have clear evidence that microservices will solve your specific problems.\u003C/p>\n\u003Cp>The goal isn’t to build microservices—it’s to build systems that enable your teams to deliver value quickly and reliably. Sometimes that’s a monolith, sometimes it’s microservices, and often it’s something in between.\u003C/p>",{"headings":315,"localImagePaths":406,"remoteImagePaths":407,"frontmatter":408,"imagePaths":411},[316,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399,402,405],{"depth":32,"slug":317,"text":301},"microservices-lessons-from-the-trenches",{"depth":35,"slug":319,"text":320},"when-microservices-make-sense-and-when-they-dont","When Microservices Make Sense (And When They Don’t)",{"depth":39,"slug":322,"text":323},"the-right-time-for-microservices","The Right Time for Microservices",{"depth":39,"slug":325,"text":326},"when-to-stick-with-the-monolith","When to Stick with the Monolith",{"depth":35,"slug":328,"text":329},"the-migration-strategy-that-actually-works","The Migration Strategy That Actually Works",{"depth":39,"slug":331,"text":332},"start-with-the-database","Start with the Database",{"depth":39,"slug":334,"text":335},"strangler-fig-pattern","Strangler Fig Pattern",{"depth":39,"slug":337,"text":338},"extract-services-based-on-business-capabilities","Extract Services Based on Business Capabilities",{"depth":35,"slug":340,"text":341},"communication-patterns-that-scale","Communication Patterns That Scale",{"depth":39,"slug":343,"text":344},"synchronous-vs-asynchronous","Synchronous vs Asynchronous",{"depth":39,"slug":346,"text":347},"event-driven-architecture","Event-Driven Architecture",{"depth":39,"slug":349,"text":350},"circuit-breaker-pattern","Circuit Breaker Pattern",{"depth":35,"slug":352,"text":353},"data-management-challenges","Data Management Challenges",{"depth":39,"slug":355,"text":356},"distributed-transactions","Distributed Transactions",{"depth":39,"slug":358,"text":359},"data-consistency-strategies","Data Consistency Strategies",{"depth":35,"slug":361,"text":362},"operational-complexity","Operational Complexity",{"depth":39,"slug":364,"text":365},"observability-is-critical","Observability is Critical",{"depth":39,"slug":367,"text":368},"service-mesh-for-cross-cutting-concerns","Service Mesh for Cross-Cutting Concerns",{"depth":35,"slug":370,"text":371},"deployment-and-devops","Deployment and DevOps",{"depth":39,"slug":373,"text":374},"cicd-per-service","CI/CD Per Service",{"depth":39,"slug":376,"text":377},"database-migrations","Database Migrations",{"depth":35,"slug":379,"text":380},"testing-strategies","Testing Strategies",{"depth":39,"slug":382,"text":383},"contract-testing","Contract Testing",{"depth":39,"slug":385,"text":386},"integration-testing","Integration Testing",{"depth":35,"slug":388,"text":389},"common-pitfalls-and-how-to-avoid-them","Common Pitfalls and How to Avoid Them",{"depth":39,"slug":391,"text":392},"1-distributed-monolith","1. Distributed Monolith",{"depth":39,"slug":394,"text":395},"2-premature-optimization","2. Premature Optimization",{"depth":39,"slug":397,"text":398},"3-shared-databases","3. Shared Databases",{"depth":39,"slug":400,"text":401},"4-synchronous-everything","4. Synchronous Everything",{"depth":39,"slug":403,"text":404},"5-ignoring-network-partitions","5. Ignoring Network Partitions",{"depth":35,"slug":85,"text":86},[],[],{"title":301,"description":302,"pubDate":409,"tags":410,"readingTime":308},["Date","2023-12-28T00:00:00.000Z"],[305,306,307],[],"microservices-lessons.md"]