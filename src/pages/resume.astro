---
import { SITE } from '../config/site.ts';
import BaseLayout from '../layouts/BaseLayout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import resumeData from '../data/resume.json';

// Helper function to format dates
const formatDate = (dateString: string) => {
  if (!dateString) return '';
  if (dateString === 'Present') return 'Present';

  // Parse "Month Year" format
  const [month, year] = dateString.split(' ');
  const monthNames = {
    Jan: 'Jan',
    Feb: 'Feb',
    Mar: 'Mar',
    Apr: 'Apr',
    May: 'May',
    Jun: 'Jun',
    Jul: 'Jul',
    Aug: 'Aug',
    Sep: 'Sep',
    Oct: 'Oct',
    Nov: 'Nov',
    Dec: 'Dec',
  };
  return `${monthNames[month]} ${year}`;
};

// Helper function to format dates - years only for older companies
const formatDateYearsOnly = (dateString: string) => {
  if (!dateString) return '';
  if (dateString === 'Present') return 'Present';

  // Extract year from "Month Year" format
  const parts = dateString.split(' ');
  return parts[parts.length - 1]; // Get the year part
};

// Helper to get overall date range for a company
const getCompanyDateRange = (
  company: (typeof resumeData.experience)[0],
  yearOnlyMode: boolean = false
) => {
  let firstStartDate: Date | null = null;
  let lastEndDate: Date | null = null;

  if (company.roles) {
    company.roles.forEach(role => {
      const currentStartDate = new Date(role.start_date);
      if (!firstStartDate || currentStartDate < firstStartDate) {
        firstStartDate = currentStartDate;
      }

      const currentEndDate = role.end_date === 'Present' ? new Date() : new Date(role.end_date);
      if (!lastEndDate || currentEndDate > lastEndDate) {
        lastEndDate = currentEndDate;
      }
    });
  } else {
    // Single role company
    firstStartDate = new Date(company.start_date);
    lastEndDate = company.end_date === 'Present' ? new Date() : new Date(company.end_date);
  }

  if (!firstStartDate || !lastEndDate) return '';

  if (yearOnlyMode) {
    const firstYear = firstStartDate.getFullYear().toString();
    const lastYear =
      lastEndDate.getFullYear() === new Date().getFullYear() &&
      lastEndDate.getMonth() === new Date().getMonth()
        ? 'Present'
        : lastEndDate.getFullYear().toString();
    return `${firstYear} - ${lastYear}`;
  } else {
    const formattedFirstStartDate = formatDate(
      firstStartDate
        .toLocaleDateString('en-US', { month: 'short', year: 'numeric' })
        .replace(',', '')
    );
    const formattedLastEndDate =
      lastEndDate.getFullYear() === new Date().getFullYear() &&
      lastEndDate.getMonth() === new Date().getMonth()
        ? 'Present'
        : formatDate(
            lastEndDate
              .toLocaleDateString('en-US', { month: 'short', year: 'numeric' })
              .replace(',', '')
          );
    return `${formattedFirstStartDate} - ${formattedLastEndDate}`;
  }
};

// Community accomplishments (additional data not in LinkedIn JSON)
const accomplishments = [
  {
    name: 'Orlando Devs, Inc.',
    position: 'President',
    when: '2016 - 2018',
    description:
      'Nonprofit focused on improving the quality of life of Software Professionals in Central Florida. The organization accompanies a community of over 3,000 members who actively engage both in person and online.',
    url: 'https://orlandodevs.com/',
  },
  {
    name: 'OrlandoJS',
    position: 'Co-organizer',
    when: '2015 - 2018',
    description:
      'Tech meetup in Orlando that covers all things JavaScript and meets on a monthly basis.',
    url: 'https://meetup.com/OrlandoJS/',
  },
];
---

<BaseLayout
  title={`Resume - ${SITE.author}`}
  description={`Professional resume and experience of ${SITE.author}, Senior Engineering Leader with over 12 years of experience.`}
>
  <Navigation />

  <main class="pt-16">
    <!-- Hero Section -->
    <section class="bg-brand-light dark:bg-brand-dark py-24">
      <div class="mx-auto max-w-4xl px-4 text-center sm:px-6 lg:px-8">
        <h1
          class="text-brand-primary dark:text-brand-light mb-6 font-serif text-4xl font-semibold sm:text-5xl"
        >
          Resume
        </h1>
        <p class="text-brand-subtle mx-auto mb-8 max-w-2xl text-xl dark:text-gray-300">
          Senior engineering leader with experience scaling teams, shaping product strategy, and
          delivering reliable systems.
        </p>
        <div class="flex flex-row justify-center gap-3 sm:gap-4">
          <a
            href="/downloads/cruzresume.pdf"
            target="_blank"
            class="bg-brand-accent hover:bg-accent-bronze focus:ring-brand-accent inline-flex items-center rounded-md border border-transparent px-4 py-3 text-sm font-medium text-white transition-colors focus:ring-2 focus:ring-offset-2 focus:outline-none sm:px-6 sm:text-base"
          >
            <svg class="mr-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
              ></path>
            </svg>
            Download PDF
          </a>
          <a
            href="mailto:hi@sergio.io"
            class="focus:ring-brand-accent inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-3 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-50 focus:ring-2 focus:ring-offset-2 focus:outline-none sm:px-6 sm:text-base dark:border-gray-600 dark:bg-gray-800 dark:text-gray-300 dark:hover:bg-gray-700"
          >
            Contact Me
          </a>
        </div>
      </div>
    </section>

    <!-- Experience -->
    <section class="dark:bg-brand-primary bg-white py-16">
      <div class="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
        <h2 class="text-brand-primary dark:text-brand-light mb-8 font-serif text-2xl font-semibold">
          Professional Experience
        </h2>

        <div class="space-y-10">
          {
            resumeData.experience.map((company, index) => (
              <div
                class:list={{
                  'border-l-4': true,
                  'pl-6': true,
                  relative: true,
                  'border-gray-300': true,
                  'older-experience': index >= 3,
                  'transition-all': true,
                  'duration-300': true,
                  'ease-in-out': true,
                }}
              >
                <div class="mb-4">
                  <h3 class="text-brand-primary dark:text-brand-light font-serif text-xl font-semibold">
                    {company.company}
                  </h3>
                  <p class="text-brand-accent dark:text-brand-accent mb-1 font-semibold">
                    {company.location}
                  </p>
                  <span class="text-sm text-gray-500 dark:text-gray-400">
                    {getCompanyDateRange(company, index >= 2)}
                  </span>
                </div>

                {company.roles ? (
                  // Multiple roles for this company
                  <div class="space-y-6">
                    {company.roles.map(role => (
                      <div class="ml-4 border-l-2 border-gray-200 pl-4">
                        <div class="mb-2 flex flex-col sm:flex-row sm:items-center sm:justify-between">
                          <h4 class="text-brand-primary dark:text-brand-light font-serif text-lg font-semibold">
                            {role.title}
                          </h4>
                          <span class="text-sm text-gray-500 dark:text-gray-400">
                            {index >= 2
                              ? `${formatDateYearsOnly(role.start_date)} - ${formatDateYearsOnly(role.end_date)}`
                              : `${formatDate(role.start_date)} - ${formatDate(role.end_date)}`}
                          </span>
                        </div>
                        <ul class="text-brand-subtle mb-4 space-y-2 dark:text-gray-300">
                          {role.responsibilities.map(responsibility => (
                            <li>• {responsibility}</li>
                          ))}
                        </ul>
                      </div>
                    ))}
                  </div>
                ) : (
                  // Single role for this company
                  <div>
                    <div class="mb-2 flex flex-col sm:flex-row sm:items-center sm:justify-between">
                      <h4 class="text-brand-primary dark:text-brand-light font-serif text-lg font-semibold">
                        {company.title}
                      </h4>
                      <span class="text-sm text-gray-500 dark:text-gray-400">
                        {index >= 2
                          ? `${formatDateYearsOnly(company.start_date)} - ${formatDateYearsOnly(company.end_date)}`
                          : `${formatDate(company.start_date)} - ${formatDate(company.end_date)}`}
                      </span>
                    </div>
                    <ul class="text-brand-subtle mb-4 space-y-2 dark:text-gray-300">
                      {company.responsibilities.map(responsibility => (
                        <li>• {responsibility}</li>
                      ))}
                    </ul>
                  </div>
                )}
              </div>
            ))
          }
        </div>

        <!-- Show More/Less Button -->
        <div class="pt-8 text-center">
          <button
            id="toggleOlderExperience"
            class="border-brand-subtle text-brand-primary hover:bg-brand-subtle/10 focus:ring-brand-accent dark:text-brand-light inline-flex items-center rounded-md border bg-transparent px-6 py-3 text-base font-medium transition-colors focus:ring-2 focus:ring-offset-2 focus:outline-none"
          >
            <span id="toggleText">Show Earlier Experience</span>
            <svg
              id="toggleIcon"
              class="ml-2 h-4 w-4 transition-transform"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>
        </div>
      </div>
    </section>

    <!-- Community Involvement & Leadership -->
    <section class="bg-brand-light dark:bg-brand-dark py-16">
      <div class="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
        <h2 class="text-brand-primary dark:text-brand-light mb-8 font-serif text-2xl font-semibold">
          Community Involvement & Leadership
        </h2>

        <div class="space-y-6">
          {
            accomplishments.map(accomplishment => (
              <div class="border-l-4 border-gray-300 pl-6">
                <div class="mb-2 flex flex-col sm:flex-row sm:items-center sm:justify-between">
                  <div class="flex items-center gap-2">
                    <h3 class="text-brand-primary dark:text-brand-light font-serif text-lg font-semibold">
                      {accomplishment.name}
                    </h3>
                    <span class="text-brand-accent dark:text-brand-accent font-medium">
                      • {accomplishment.position}
                    </span>
                  </div>
                  <span class="text-sm text-gray-500 dark:text-gray-400">
                    {accomplishment.when}
                  </span>
                </div>
                <p class="text-brand-subtle mb-2 dark:text-gray-300">
                  {accomplishment.description}
                </p>
                {accomplishment.url && (
                  <a
                    href={accomplishment.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-brand-link hover:text-accent-blue dark:text-brand-link dark:hover:text-accent-blue text-sm font-medium"
                  >
                    Visit Website →
                  </a>
                )}
              </div>
            ))
          }
        </div>
      </div>
    </section>
  </main>

  <Footer />

  <script client:load>
    document.addEventListener('DOMContentLoaded', function () {
      const toggleButton = document.getElementById('toggleOlderExperience');
      const toggleText = document.getElementById('toggleText');
      const toggleIcon = document.getElementById('toggleIcon');
      const olderExperienceElements = document.querySelectorAll('.older-experience');

      let isExpanded = false;

      // Initially hide older experience
      olderExperienceElements.forEach(element => {
        element.style.maxHeight = '0';
        element.style.opacity = '0';
        element.style.overflow = 'hidden';
        element.style.marginTop = '0';
        element.style.marginBottom = '0';
      });

      toggleButton?.addEventListener('click', function () {
        isExpanded = !isExpanded;

        olderExperienceElements.forEach(element => {
          if (isExpanded) {
            // Show older experience
            element.style.maxHeight = '1000px'; // Large enough to show content
            element.style.opacity = '1';
            element.style.overflow = 'visible';
            element.style.marginTop = '2.5rem'; // space-y-10 equivalent
            element.style.marginBottom = '0';
          } else {
            // Hide older experience
            element.style.maxHeight = '0';
            element.style.opacity = '0';
            element.style.overflow = 'hidden';
            element.style.marginTop = '0';
            element.style.marginBottom = '0';
          }
        });

        if (toggleText) {
          toggleText.textContent = isExpanded ? 'Show Less Experience' : 'Show Earlier Experience';
        }

        if (toggleIcon) {
          if (isExpanded) {
            toggleIcon.style.transform = 'rotate(180deg)';
          } else {
            toggleIcon.style.transform = 'rotate(0deg)';
          }
        }
      });
    });
  </script>

  <style>
    .older-experience {
      transition:
        max-height 0.3s ease-in-out,
        opacity 0.3s ease-in-out,
        margin 0.3s ease-in-out;
    }
  </style>
</BaseLayout>