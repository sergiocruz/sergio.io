---
import { SITE } from '../config/site.ts';
import { getCollection } from 'astro:content';
import { getValidatedYouTubeThumbnailUrl } from '../utils/youtube.ts';
import BaseLayout from '../layouts/BaseLayout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';

// Get all featured work content
const allCourses = await getCollection('courses');
const allVideos = await getCollection('videos');
const allPublications = await getCollection('publications');

// Filter for featured content
const featuredCourses = allCourses.filter(course => course.data.featured);
const featuredVideos = allVideos.filter(video => video.data.featured);
const featuredPublications = allPublications.filter(publication => publication.data.featured);

// Validate YouTube thumbnails at build time
const videosWithThumbnails = await Promise.all(
  allVideos.map(async (video) => {
    const thumbnailUrl = video.data.link ? await getValidatedYouTubeThumbnailUrl(video.data.link) : null;
    return {
      ...video,
      validatedThumbnailUrl: thumbnailUrl
    };
  })
);

// Format date function
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  }).format(date);
};

// Get gradient classes for different content types
const getGradientClass = (index: number, type: string) => {
  const gradients = {
    course: [
      'from-brand-link to-accent-blue',
      'from-brand-accent to-accent-bronze'
    ],
    video: [
      'from-primary-400 to-primary-600',
      'from-green to-primary-500',
      'from-pink to-primary-600',
      'from-yellow to-primary-500'
    ],
    'video-overlay': [
      'from-primary-400-overlay to-primary-600-overlay',
      'from-green-overlay to-primary-500-overlay',
      'from-pink-overlay to-primary-600-overlay',
      'from-yellow-overlay to-primary-500-overlay'
    ],
    publication: [
      'from-primary-400 to-primary-600',
      'from-green to-primary-500',
      'from-pink to-primary-600'
    ]
  };
  
  const typeGradients = gradients[type] || gradients.video;
  return typeGradients[index % typeGradients.length];
};
---

<BaseLayout title={`Featured Work - ${SITE.author}`} description={`Speaking engagements, conference talks, and publications by ${SITE.author}.`}>
  <Navigation />
  
  <main class="pt-16">
    <!-- Hero Section -->
    <section class="bg-white dark:bg-gray-900 py-24">
      <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 class="text-4xl sm:text-5xl font-bold text-gray-900 dark:text-white mb-6">
          Featured Work
        </h1>
        <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
          Sharing knowledge through speaking engagements, conference talks, written publications, and courses on software engineering and leadership.
        </p>
      </div>
    </section>

    <!-- Courses & Educational Content -->
    <section class="bg-gray-50 dark:bg-gray-800 py-24">
      <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-16">
          <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">
            Courses & Educational Content
          </h2>
          <p class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
            Educational content and courses helping engineers and leaders level up their skills.
          </p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          {featuredCourses.map((course, index) => (
            <div class="bg-white dark:bg-gray-900 rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
              <div class={`h-48 bg-gradient-to-br ${getGradientClass(index, 'course')} flex items-center justify-center`}>
                <svg class="w-16 h-16 text-white opacity-80" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                </svg>
              </div>
              <div class="p-6">
                <div class="flex items-center mb-3">
                  <span class="bg-brand-link/10 text-brand-link px-3 py-1 rounded-full text-sm font-medium font-sans">
                    {course.data.icon} {course.data.platform}
                  </span>
                </div>
                <h3 class="text-xl font-serif font-semibold text-brand-primary dark:text-brand-light mb-3">
                  {course.data.title}
                </h3>
                <p class="text-brand-subtle dark:text-gray-300 mb-4 font-sans">
                  {course.data.description}
                </p>
                <a href={course.data.link} target="_blank" rel="noopener noreferrer" class="text-brand-link hover:text-accent-blue font-medium font-sans">
                  View Course →
                </a>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Speaking Engagements -->
    <section class="bg-white dark:bg-gray-900 py-24">
      <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-16">
          <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">
            Speaking Engagements
          </h2>
          <p class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
            I regularly speak at conferences, meetups, and corporate events about software engineering, team leadership, and building great products.
          </p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {videosWithThumbnails.map((video, index) => (
            <div class="bg-white dark:bg-gray-900 rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
              <div 
                class={`h-48 relative overflow-hidden bg-cover bg-center ${video.validatedThumbnailUrl ? '' : `bg-gradient-to-br ${getGradientClass(index, 'video')}`}`}
                style={video.validatedThumbnailUrl ? `background-image: url(${video.validatedThumbnailUrl});` : ''}
              >
                {/* Gradient Overlay - only when we have a thumbnail */}
                {video.validatedThumbnailUrl && (
                  <div class={`absolute inset-0 bg-gradient-to-br ${getGradientClass(index, 'video-overlay')}`}></div>
                )}
                
                {/* SVG Icon */}
                <div class={`absolute inset-0 flex items-center justify-center ${video.validatedThumbnailUrl ? 'z-10' : ''}`}>
                  {video.data.type === 'Keynote' ? (
                    <svg class="w-16 h-16 text-white opacity-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                    </svg>
                  ) : video.data.type === 'Workshop' ? (
                    <svg class="w-16 h-16 text-white opacity-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                    </svg>
                  ) : (
                    <svg class="w-16 h-16 text-white opacity-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                    </svg>
                  )}
                </div>
              </div>
              <div class="p-6">
                <div class="flex items-center justify-between mb-4">
                  <span class="bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 px-3 py-1 rounded-full text-sm font-medium">
                    {video.data.type}
                  </span>
                  <span class="text-gray-500 dark:text-gray-400 text-sm">
                    {formatDate(video.data.date)}
                  </span>
                </div>
                <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3">
                  {video.data.title}
                </h3>
                <p class="text-gray-600 dark:text-gray-300 mb-4">
                  {video.data.description}
                </p>
                <div class="flex items-center justify-between">
                  <span class="text-sm text-gray-500 dark:text-gray-400">{video.data.venue}</span>
                  {video.data.link && (
                    <a href={video.data.link} target="_blank" rel="noopener noreferrer" class="text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 font-medium">
                      {video.data.type === 'Meetup' ? 'View Slides' : video.data.type === 'Keynote' ? 'Watch Keynote' : 'Watch Talk'} →
                    </a>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Publications -->
    <section class="bg-gray-50 dark:bg-gray-800 py-24">
      <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-16">
          <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">
            Publications & Articles
          </h2>
          <p class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
            Written contributions to the software engineering community through articles, tutorials, and technical publications.
          </p>
        </div>
        
        <div class="space-y-8">
          {allPublications.map((publication) => (
            <div class="bg-white dark:bg-gray-900 rounded-lg p-8 hover:shadow-lg transition-shadow duration-300">
              <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between">
                <div class="flex-1">
                  <div class="flex items-center mb-3">
                    <span class="bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 px-3 py-1 rounded-full text-sm font-medium mr-3">
                      {publication.data.type}
                    </span>
                    <span class="text-gray-500 dark:text-gray-400 text-sm">
                      Published in {publication.data.publisher}
                    </span>
                  </div>
                  <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3">
                    {publication.data.title}
                  </h3>
                  <p class="text-gray-600 dark:text-gray-300 mb-4">
                    {publication.data.description}
                  </p>
                  <div class="text-sm text-gray-500 dark:text-gray-400">
                    Published on {formatDate(publication.data.date)}
                  </div>
                </div>
                <div class="lg:ml-8 lg:flex-shrink-0 mt-4 lg:mt-0">
                  <a href={publication.data.link} target="_blank" rel="noopener noreferrer" class="inline-flex items-center text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 font-medium">
                    {publication.data.type === 'Book Chapter' ? 'View Book' : publication.data.type === 'Tutorial Series' ? 'View Series' : 'Read Article'}
                    <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                    </svg>
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Speaking Availability -->
    <section class="bg-primary-950 text-white py-24">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h2 class="text-3xl font-bold mb-6">
          Interested in Having Me Speak?
        </h2>
        <p class="text-xl text-primary-100 mb-8 max-w-2xl mx-auto">
          I'm always excited to share knowledge and connect with the community. Let's discuss how I can contribute to your event.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a href="mailto:hello@sergio.io" class="inline-flex items-center px-6 py-3 border border-white text-base font-medium rounded-md text-white bg-transparent hover:bg-white hover:text-primary-950 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white transition-colors">
            Get In Touch
          </a>
          <a href="/resume" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-primary-950 bg-white hover:bg-primary-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors">
            View Speaker Bio
          </a>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
</BaseLayout>